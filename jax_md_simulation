{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "NVT Simulation.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/pinballsurgeon/deluxo_adjacency/blob/main/jax_md_simulation\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kNDQ02qlDnNW",
        "outputId": "08abbb19-81ce-4a26-fff5-b9d0b642a7e9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "#@title Imports & Utils\n",
        "\n",
        "!pip install jax-md\n",
        "\n",
        "import numpy as onp\n",
        "\n",
        "from jax.config import config ; config.update('jax_enable_x64', True)\n",
        "import jax.numpy as np\n",
        "from jax import random\n",
        "from jax import jit\n",
        "from jax import lax\n",
        "from jax import ops\n",
        "\n",
        "import time\n",
        "\n",
        "from jax_md import space, smap, energy, minimize, quantity, simulate\n",
        "\n",
        "import matplotlib\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "  \n",
        "sns.set_style(style='white')\n",
        "\n",
        "def format_plot(x, y):  \n",
        "  plt.xlabel(x, fontsize=20)\n",
        "  plt.ylabel(y, fontsize=20)\n",
        "  \n",
        "def finalize_plot(shape=(1, 1)):\n",
        "  plt.gcf().set_size_inches(\n",
        "    shape[0] * 1.5 * plt.gcf().get_size_inches()[1], \n",
        "    shape[1] * 1.5 * plt.gcf().get_size_inches()[1])\n",
        "  plt.tight_layout()"
      ],
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: jax-md in /usr/local/lib/python3.7/dist-packages (0.1.29)\n",
            "Requirement already satisfied: dataclasses in /usr/local/lib/python3.7/dist-packages (from jax-md) (0.6)\n",
            "Requirement already satisfied: jax>=0.1.73 in /usr/local/lib/python3.7/dist-packages (from jax-md) (0.3.14)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from jax-md) (1.21.6)\n",
            "Requirement already satisfied: dm-haiku>=0.0.2 in /usr/local/lib/python3.7/dist-packages (from jax-md) (0.0.7)\n",
            "Requirement already satisfied: absl-py in /usr/local/lib/python3.7/dist-packages (from jax-md) (1.2.0)\n",
            "Requirement already satisfied: jaxlib>=0.1.52 in /usr/local/lib/python3.7/dist-packages (from jax-md) (0.3.14+cuda11.cudnn805)\n",
            "Requirement already satisfied: jraph in /usr/local/lib/python3.7/dist-packages (from jax-md) (0.0.5.dev0)\n",
            "Requirement already satisfied: jmp>=0.0.2 in /usr/local/lib/python3.7/dist-packages (from dm-haiku>=0.0.2->jax-md) (0.0.2)\n",
            "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from dm-haiku>=0.0.2->jax-md) (4.1.1)\n",
            "Requirement already satisfied: tabulate>=0.8.9 in /usr/local/lib/python3.7/dist-packages (from dm-haiku>=0.0.2->jax-md) (0.8.10)\n",
            "Requirement already satisfied: scipy>=1.5 in /usr/local/lib/python3.7/dist-packages (from jax>=0.1.73->jax-md) (1.7.3)\n",
            "Requirement already satisfied: etils[epath] in /usr/local/lib/python3.7/dist-packages (from jax>=0.1.73->jax-md) (0.6.0)\n",
            "Requirement already satisfied: opt-einsum in /usr/local/lib/python3.7/dist-packages (from jax>=0.1.73->jax-md) (3.3.0)\n",
            "Requirement already satisfied: flatbuffers<3.0,>=1.12 in /usr/local/lib/python3.7/dist-packages (from jaxlib>=0.1.52->jax-md) (2.0)\n",
            "Requirement already satisfied: zipp in /usr/local/lib/python3.7/dist-packages (from etils[epath]->jax>=0.1.73->jax-md) (3.8.1)\n",
            "Requirement already satisfied: importlib_resources in /usr/local/lib/python3.7/dist-packages (from etils[epath]->jax>=0.1.73->jax-md) (5.8.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uxCDg0ioWh70"
      },
      "source": [
        "# Constant Temperature Simulation"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dFK0Dew5MwXt"
      },
      "source": [
        "Here we demonstrate some code to run a simulation at in the NVT ensemble. We start off by setting up some parameters of the simulation. This will include a temperature schedule that will start off at a high temperature and then instantaneously quench to a lower temperature."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yGdrjCj1Wm9J"
      },
      "source": [
        "N = 400\n",
        "dimension = 2\n",
        "box_size = quantity.box_size_at_number_density(N, 0.8, 2)\n",
        "dt = 5e-3\n",
        "displacement, shift = space.periodic(box_size) \n",
        "\n",
        "kT = lambda t: np.where(t < 5000.0 * dt, 0.1, 0.01)"
      ],
      "execution_count": 36,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uFrxHj12M3X1"
      },
      "source": [
        "Next we need to generate some random positions as well as particle sizes."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rEic-SLigNIa"
      },
      "source": [
        "key = random.PRNGKey(0)"
      ],
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5ApXCCgdWm9O"
      },
      "source": [
        "key, split = random.split(key)\n",
        "R = box_size * random.uniform(split, (N, dimension), dtype=np.float64)\n",
        "\n",
        "# The system ought to be a 50:50 mixture of two types of particles, one\n",
        "# large and one small.\n",
        "sigma = np.array([[1.0, 1.2], [1.2, 1.4]])\n",
        "N_2 = int(N / 2)\n",
        "species = np.where(np.arange(N) < N_2, 0, 1)"
      ],
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hjPUEPcwM6jc"
      },
      "source": [
        "Then we need to construct our simulation operators."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B1xXV_FmWm9Q"
      },
      "source": [
        "energy_fn = energy.soft_sphere_pair(displacement, species=species, sigma=sigma)\n",
        "\n",
        "init, apply = simulate.nvt_nose_hoover(energy_fn, shift, dt, kT(0.))\n",
        "state = init(key, R)"
      ],
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hJRvIrfiNAgV"
      },
      "source": [
        "Now let's actually do the simulation. To do this we'll write a small function that performs a single step of the simulation. This function will keep track of the temperature, the extended Hamiltonian of the Nose-Hoover dynamics, and the current particle positions."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1rtYEp_LP35v"
      },
      "source": [
        "write_every = 100\n",
        "\n",
        "def step_fn(i, state_and_log):\n",
        "  state, log = state_and_log\n",
        "\n",
        "  t = i * dt\n",
        "\n",
        "  # Log information about the simulation.\n",
        "  T = quantity.temperature(state.velocity)\n",
        "  #log['kT'] = ops.index_update(log['kT'], i, T)\n",
        "  #log['kT'] = ops.index_update(log['kT'], i, T)\n",
        "  log['kT'].at[i].set(T)\n",
        "  H = simulate.nvt_nose_hoover_invariant(energy_fn, state, kT(t))\n",
        "  #log['H'] = ops.index_update(log['H'], i, H)\n",
        "  log['H'].at[i].set(H)\n",
        "  # Record positions every `write_every` steps.\n",
        "  #log['position'] = lax.cond(i % write_every == 0,\n",
        "  #                           lambda p: ops.index_update(p, \n",
        "  #                                                      i // write_every, \n",
        "  #                                                      state.position),\n",
        "  #                           lambda p: p,\n",
        "  #                           log['position'])\n",
        "\n",
        "  lax.cond(i % write_every == 0,\n",
        "            lambda p: p.at[i // write_every].set(state.position),\n",
        "            lambda p: p,\n",
        "            log['position'])                             \n",
        "\n",
        "  # Take a simulation step.\n",
        "  state = apply(state, kT=kT(t))\n",
        "  \n",
        "  return state, log"
      ],
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "asUbxPn9lU6H"
      },
      "source": [
        "To run our simulation we'll use `lax.fori_loop` which will execute the simulation a single call from python."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "psqU1uEPWm9T"
      },
      "source": [
        "steps = 10000\n",
        "\n",
        "log = {\n",
        "    'kT': np.zeros((steps,)),\n",
        "    'H': np.zeros((steps,)),\n",
        "    'position': np.zeros((steps // write_every,) + R.shape) \n",
        "}\n",
        "\n",
        "state, log = lax.fori_loop(0, steps, step_fn, (state, log))\n",
        "\n",
        "R = state.position"
      ],
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0hhEEuojNFht"
      },
      "source": [
        "Now, let's plot the temperature as a function of time. We see that the temperature tracks the goal temperature with some fluctuations."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jiJOwCAPirFn",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 441
        },
        "outputId": "76ca122d-8665-4fed-efa0-3c3f17de7acd"
      },
      "source": [
        "t = onp.arange(0, steps) * dt\n",
        "plt.plot(t, log['kT'], linewidth=3)\n",
        "plt.plot(t, kT(t), linewidth=3)\n",
        "format_plot('$t$', '$T$')\n",
        "finalize_plot()"
      ],
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kTvH7BpVQtkm"
      },
      "source": [
        "Now let's plot the Hamiltonian of the system. We see that it is invariant apart from changes to the temperature, as expected."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xDsowzLKQo3Z",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 441
        },
        "outputId": "88ee5bbf-160e-4a52-a8c5-4c4e134faceb"
      },
      "source": [
        "plt.plot(t, log['H'], linewidth=3)\n",
        "format_plot('$t$', '$H$')\n",
        "finalize_plot()"
      ],
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qtroRWfgqcT4"
      },
      "source": [
        "Now let's plot a snapshot of the system."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Yq4Rz3eMqcTh",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 873
        },
        "outputId": "bc570352-3740-4f19-e035-8e2fe753684f"
      },
      "source": [
        "ms = 65\n",
        "R_plt = onp.array(state.position)\n",
        "\n",
        "plt.plot(R_plt[:N_2, 0], R_plt[:N_2, 1], 'o', markersize=ms * 0.5)\n",
        "plt.plot(R_plt[N_2:, 0], R_plt[N_2:, 1], 'o', markersize=ms * 0.7)\n",
        "\n",
        "plt.xlim([0, np.max(R[:, 0])])\n",
        "plt.ylim([0, np.max(R[:, 1])])\n",
        "\n",
        "plt.axis('off')\n",
        "\n",
        "finalize_plot((2, 2))"
      ],
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x864 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "l4RLeAhVmA-_"
      },
      "source": [
        "If we want, we can also draw an animation of the simulation using JAX MD's renderer."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 745
        },
        "id": "79CiYF_aTgTq",
        "outputId": "b71af2c6-c346-4c99-8389-d44ecef236a7"
      },
      "source": [
        "from jax_md.colab_tools import renderer\n",
        "\n",
        "diameters = sigma[species, species]\n",
        "colors = np.where(species[:, None], \n",
        "                  np.array([[1.0, 0.5, 0.01]]), \n",
        "                  np.array([[0.35, 0.65, 0.85]]))\n",
        "\n",
        "renderer.render(box_size,\n",
        "                {\n",
        "                    'particles': renderer.Disk(log['position'], \n",
        "                                               diameters,\n",
        "                                               colors)\n",
        "                },\n",
        "                resolution=(700, 700))"
      ],
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<!--\n",
              "  Copyright 2020 Google LLC\n",
              "  Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "  you may not use this file except in compliance with the License.\n",
              "  You may obtain a copy of the License at\n",
              "      https://www.apache.org/licenses/LICENSE-2.0\n",
              "  Unless required by applicable law or agreed to in writing, software\n",
              "  distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "  See the License for the specific language governing permissions and\n",
              "  limitations under the License.\n",
              "-->\n",
              "\n",
              "<!--\n",
              "  A fragment of HTML and Javascript that describes a visualization tool.\n",
              "\n",
              "  This code is expected to be injected into Jupyter or Colaboratory notebooks using the `IPython.display.HTML` function. The tool is rendered using WebGL2.\n",
              "-->\n",
              "\n",
              "<div id='seek'>\n",
              "  <button type='button'\n",
              "          id='pause_play'\n",
              "          style='width:40px; vertical-align:middle;'\n",
              "          onclick=\"toggle_play()\"> ||\n",
              "  </button>\n",
              "  <input type=\"range\"\n",
              "         min=\"0\"\n",
              "         max=\"1\"\n",
              "         value=\"0\"\n",
              "         style=\"width:512px; vertical-align:middle;\"\n",
              "         class=\"slider\"\n",
              "         id=\"frame_range\"\n",
              "         oninput='change_frame(this.value)'>\n",
              "</div>\n",
              "<canvas id=\"canvas\"></canvas>\n",
              "<div id='info'> </div>\n",
              "<div id='error' style=\"color:red\"> </div>\n",
              "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/gl-matrix/2.8.1/gl-matrix-min.js\"></script>\n",
              "\n",
              "<script>\n",
              "  var DIMENSION;\n",
              "\n",
              "  var SIZE;\n",
              "\n",
              "  var SHAPE = {};\n",
              "\n",
              "  var GEOMETRY = {};\n",
              "\n",
              "  var CURRENT_FRAME = 0;\n",
              "  var FRAME_COUNT = 0;\n",
              "  var FRAME_RATE = -1;\n",
              "  var LAST_FRAME_TIME = Date.now() / 1000.0;\n",
              "\n",
              "  var BOX_SIZE;\n",
              "  var READ_BUFFER_SIZE = null;\n",
              "  var IS_LOADED = false;\n",
              "  var SIMULATION_IDX = 0;\n",
              "\n",
              "  // Info\n",
              "\n",
              "  var INFO = ''\n",
              "  var ERROR = ''\n",
              "\n",
              "  // Graphics\n",
              "\n",
              "  var GL;\n",
              "  var SHADER;\n",
              "  var BACKGROUND_COLOR = [0.2, 0.2, 0.2];\n",
              "\n",
              "  // 3D Camera\n",
              "\n",
              "  var EYE = mat4.create();\n",
              "  var PERSPECTIVE = mat4.create();\n",
              "  var LOOK_AT = mat4.create()\n",
              "  var YAW = 0.0;\n",
              "  var PITCH = 0.0;\n",
              "  var CAMERA_POSITION = mat4.create();\n",
              "  var Y_ROTATION_MATRIX = mat4.create();\n",
              "  var X_ROTATION_MATRIX = mat4.create();\n",
              "  var VIEW_DISTANCE = 0.0;\n",
              "\n",
              "  function make_look_at() {\n",
              "    var center = [BOX_SIZE[0] / 2.0, BOX_SIZE[1] / 2.0, BOX_SIZE[2] / 2.0];\n",
              "    var direction = [Math.cos(YAW) * Math.cos(PITCH),\n",
              "                     Math.sin(PITCH),\n",
              "                     Math.sin(YAW) * Math.cos(PITCH)];\n",
              "    var pos = [center[0] - VIEW_DISTANCE * direction[0],\n",
              "               center[1] - VIEW_DISTANCE * direction[1],\n",
              "               center[2] - VIEW_DISTANCE * direction[2]];\n",
              "    mat4.lookAt(LOOK_AT,\n",
              "                pos,\n",
              "                center,\n",
              "                [0.0, 1.0, 0.0]);\n",
              "  }\n",
              "\n",
              "  // 2D Camera\n",
              "\n",
              "  var SCREEN_POSITION = [0, 0];\n",
              "  var CAMERA_SIZE = [0, 0];\n",
              "\n",
              "  // Bonds\n",
              "\n",
              "  const BOND_SEGMENTS = 3;\n",
              "  const VERTICES_PER_BOND = BOND_SEGMENTS * 6;\n",
              "\n",
              "  // Simulation State\n",
              "\n",
              "  var IS_PLAYING = true;\n",
              "  var PLAY_PAUSE_BUTTON = document.getElementById('pause_play');\n",
              "\n",
              "  var FRAME_RANGE = document.getElementById('frame_range');\n",
              "\n",
              "  google.colab.output.setIframeHeight(0, true, {maxHeight: 5000});\n",
              "  var invokeFunction = google.colab.kernel.invokeFunction;\n",
              "\n",
              "  var CANVAS = document.getElementById(\"canvas\");\n",
              "  CANVAS.width = 512;\n",
              "  CANVAS.height = 512;\n",
              "\n",
              "  // Simulation Loading.\n",
              "\n",
              "  function make_sizes() {\n",
              "    return {\n",
              "      position: DIMENSION,\n",
              "      angle: DIMENSION - 1,\n",
              "      size: 1,\n",
              "      color: 3,\n",
              "    };\n",
              "  }\n",
              "\n",
              "  function simulation_info_string() {\n",
              "    return ('<p style=\"color:yellow\">' +\n",
              "            'Simulation Info:</p><div style=\"padding-left: 20px; padding-bottom: 10px;\">' +\n",
              "            'Box Size:    ' + BOX_SIZE.map(x => parseFloat(x).toFixed(2)) + '<br>' +\n",
              "            'Dimension:   ' + DIMENSION + '<br>' +\n",
              "            'Frame Count: ' + FRAME_COUNT + '<br></div>');\n",
              "  }\n",
              "\n",
              "  async function load_simulation() {\n",
              "    console.log(\"Loading simulation.\");\n",
              "\n",
              "    var result = await invokeFunction('GetSimulationMetadata', [], {});\n",
              "    var metadata = from_json(result);\n",
              "\n",
              "    if(metadata.verbose) {\n",
              "      INFO = document.getElementById('info');\n",
              "      ERROR = document.getElementById('error');\n",
              "    }\n",
              "\n",
              "    INFO.innerHTML = 'Loading simulation...<br>';\n",
              "    if(!metadata.box_size) {\n",
              "      ERROR.innerHTML += 'ERROR: No box size specified.<br>';\n",
              "    }\n",
              "\n",
              "    FRAME_COUNT = 1;\n",
              "    BOX_SIZE = metadata.box_size;\n",
              "    DIMENSION = metadata.dimension;\n",
              "    SIMULATION_IDX = metadata.simulation_idx;\n",
              "\n",
              "    if (metadata.frame_count)\n",
              "      FRAME_COUNT = metadata.frame_count;\n",
              "\n",
              "    if (metadata.background_color)\n",
              "      BACKGROUND_COLOR = metadata.background_color;\n",
              "\n",
              "    if (metadata.resolution) {\n",
              "      CANVAS.width = metadata.resolution[0];\n",
              "      CANVAS.height = metadata.resolution[1];\n",
              "    }\n",
              "\n",
              "    if (metadata.frame_rate)\n",
              "      FRAME_RATE = metadata.frame_rate;\n",
              "\n",
              "    const aspect_ratio = CANVAS.width / CANVAS.height;\n",
              "\n",
              "    INFO.innerHTML += simulation_info_string();\n",
              "\n",
              "    SIZE = make_sizes();\n",
              "    initialize_gl();\n",
              "\n",
              "    if (DIMENSION == 2) {\n",
              "      SCREEN_POSITION = [BOX_SIZE[0] / 2.0, BOX_SIZE[1] / 2.0];\n",
              "      CAMERA_SIZE = [aspect_ratio * BOX_SIZE[0] / 2.0, BOX_SIZE[1] / 2.0];\n",
              "    } else if (DIMENSION == 3) {\n",
              "      const fovy = 45.0 / 180.0 * Math.PI;\n",
              "      const max_box_size = Math.max(BOX_SIZE[0], BOX_SIZE[1], BOX_SIZE[2]);\n",
              "      PERSPECTIVE = mat4.perspective(PERSPECTIVE,\n",
              "                                     fovy,            // Field of view.\n",
              "                                     aspect_ratio,    // Aspect ratio.\n",
              "                                     max_box_size / 10.0, // Near clip plane.\n",
              "                                     100 * max_box_size); // Far clip plane.\n",
              "      VIEW_DISTANCE = 2 * max_box_size;\n",
              "      make_look_at();\n",
              "    } else {\n",
              "      ERROR.innerHTML += 'ERROR: Invalid dimension specified: ' + DIMENSION + '.<br>';\n",
              "    }\n",
              "\n",
              "    FRAME_RANGE.max = FRAME_COUNT - 1;\n",
              "\n",
              "    // This specifies the maximum number of frames of data we will try to\n",
              "    // transfer between Python and Javascript at a time.\n",
              "    READ_BUFFER_SIZE = metadata.buffer_size;\n",
              "    if (!READ_BUFFER_SIZE)\n",
              "      READ_BUFFER_SIZE = FRAME_COUNT;\n",
              "\n",
              "    var geometry_list = metadata.geometry;\n",
              "    if (geometry_list) {\n",
              "      for (var i = 0; i < geometry_list.length ; i++) {\n",
              "        const name = geometry_list[i];\n",
              "        GEOMETRY[name] = await load_geometry(name);\n",
              "      }\n",
              "    }\n",
              "\n",
              "    IS_LOADED = true;\n",
              "  }\n",
              "\n",
              "  async function load_geometry(name) {\n",
              "    console.log('Loading ' + name + '.');\n",
              "    INFO.innerHTML += 'Loading geometry \"' + name + '\".<br>';\n",
              "    var result = await invokeFunction('GetGeometryMetadata' + SIMULATION_IDX,\n",
              "                                      [name], {});\n",
              "    var data = from_json(result);\n",
              "\n",
              "    console.log(data);\n",
              "\n",
              "    var geometry = {};\n",
              "    geometry.name = name;\n",
              "    geometry.shape = data.shape;\n",
              "    geometry.count = data.count;\n",
              "    geometry.selected = new Int32Array(data.count);\n",
              "\n",
              "    if (data.reference_geometry)\n",
              "      geometry.reference_geometry = data.reference_geometry;\n",
              "\n",
              "    if (data.max_neighbors)\n",
              "      geometry.max_neighbors = data.max_neighbors;\n",
              "\n",
              "    if(!geometry.shape) {\n",
              "      ERROR.innerHTML += 'ERROR: No shape specified for the geometry.<br>';\n",
              "    }\n",
              "\n",
              "    for (var field in data.fields) {\n",
              "      var array;\n",
              "      var array_type;\n",
              "      if (data.fields[field] == 'dynamic') {\n",
              "        array = await load_dynamic_array(name, field, geometry.count);\n",
              "        array_type = GL.DYNAMIC_DRAW;\n",
              "      } else if (data.fields[field] == 'static') {\n",
              "        array = await load_array(name, field);\n",
              "        array_type = GL.STATIC_DRAW;\n",
              "      } else if (data.fields[field] == 'global') {\n",
              "        array = await load_array(name, field);\n",
              "        array_type = 'GLOBAL';\n",
              "      } else {\n",
              "        ERROR.innerHTML += ('ERROR: field must have type \"dynamic\", \"static\", or ' +\n",
              "                            '\"global\". Found' + data.fields[field] + '.<br>');\n",
              "      }\n",
              "\n",
              "      geometry[field] = array;\n",
              "      geometry[field + '_type'] = array_type;\n",
              "\n",
              "      if (data.shape == 'Bond' && field == 'neighbor_idx')\n",
              "        continue;\n",
              "\n",
              "      if (array_type != 'GLOBAL') {\n",
              "        var array_buffer = GL.createBuffer();\n",
              "        var array_buffer_size = 4 * SIZE[field] * geometry.count;\n",
              "        GL.bindBuffer(GL.ARRAY_BUFFER, array_buffer);\n",
              "        GL.bufferData(GL.ARRAY_BUFFER, array, array_type);\n",
              "        geometry[field + '_buffer'] = array_buffer;\n",
              "        geometry[field + '_buffer_size'] = array_buffer_size;\n",
              "      }\n",
              "    }\n",
              "\n",
              "    if (data.shape == 'Bond') {\n",
              "      var vertex_buffer = GL.createBuffer();\n",
              "      var vertex_count = (geometry.count *\n",
              "                          geometry.max_neighbors *\n",
              "                          VERTICES_PER_BOND);\n",
              "      var vertex_buffer_size = 4 * SIZE['position'] * vertex_count;\n",
              "      GL.bindBuffer(GL.ARRAY_BUFFER, vertex_buffer);\n",
              "      GL.bufferData(GL.ARRAY_BUFFER, vertex_buffer_size, GL.DYNAMIC_DRAW);\n",
              "\n",
              "      geometry.vertices = new Float32Array(SIZE['position'] * vertex_count);\n",
              "      geometry.vertex_buffer = vertex_buffer;\n",
              "      geometry.vertex_buffer_size = vertex_buffer_size;\n",
              "\n",
              "      var vertex_normal_buffer = GL.createBuffer();\n",
              "      GL.bindBuffer(GL.ARRAY_BUFFER, vertex_normal_buffer);\n",
              "      GL.bufferData(GL.ARRAY_BUFFER, vertex_buffer_size, GL.DYNAMIC_DRAW);\n",
              "\n",
              "      geometry.normals = new Float32Array(SIZE['position'] * vertex_count);\n",
              "      geometry.vertex_normal_buffer = vertex_normal_buffer;\n",
              "    }\n",
              "\n",
              "    return geometry;\n",
              "  }\n",
              "\n",
              "  async function load_dynamic_array(name, field, count) {\n",
              "    if (!FRAME_COUNT) {\n",
              "      ERROR.innerHTML += 'ERROR: No frame count specified.<br>';\n",
              "    }\n",
              "\n",
              "    var array = new Float32Array(FRAME_COUNT * count * SIZE[field]);\n",
              "\n",
              "    const info_text = INFO.innerHTML;\n",
              "\n",
              "    for (var i = 0 ; i < FRAME_COUNT ; i += READ_BUFFER_SIZE) {\n",
              "      await load_array_chunk(name, field, count, array, i, info_text);\n",
              "    }\n",
              "\n",
              "    INFO.innerHTML = info_text + 'Loaded \"' + field + '\".<br>';\n",
              "\n",
              "    return array;\n",
              "  }\n",
              "\n",
              "  async function load_array_chunk(name, field, count, array, offset, info_text) {\n",
              "    var dbg_string = ('Loading \"' + field + '\" chunk at time offset ' + offset +\n",
              "                      '.<br>');\n",
              "    console.log(dbg_string);\n",
              "    INFO.innerHTML = info_text + dbg_string + '<br>';\n",
              "\n",
              "    var result = await invokeFunction('GetArrayChunk' + SIMULATION_IDX,\n",
              "                                      [name, field, offset, READ_BUFFER_SIZE],\n",
              "                                      {});\n",
              "    var data = from_json(result);\n",
              "\n",
              "    if (!data.array_chunk) {\n",
              "      // Error checking.\n",
              "    }\n",
              "\n",
              "    var array_chunk = decode(data.array_chunk);\n",
              "    array.set(array_chunk, offset * count * SIZE[field]);\n",
              "  }\n",
              "\n",
              "  async function load_array(name, field) {\n",
              "    const info_text = INFO.innerHTML;\n",
              "    INFO.innerHTML += 'Loading \"' + field + '\".<br>';\n",
              "    var result = await invokeFunction('GetArray' + SIMULATION_IDX,\n",
              "                                      [name, field], {});\n",
              "    var data = from_json(result);\n",
              "\n",
              "    if (!data.array) {\n",
              "      ERROR.innerHTML += 'ERROR: No data array specified.<br>';\n",
              "    }\n",
              "    INFO.innerHTML = info_text + 'Loaded \"' + field + '\".<br>';\n",
              "    return decode(data.array);\n",
              "  }\n",
              "\n",
              "  function initialize_gl() {\n",
              "    GL = CANVAS.getContext(\"webgl2\");\n",
              "\n",
              "    if (!GL) {\n",
              "        alert('Unable to initialize WebGL.');\n",
              "        return;\n",
              "    }\n",
              "\n",
              "    GL.viewport(0, 0, GL.drawingBufferWidth, GL.drawingBufferHeight);\n",
              "\n",
              "    if (BACKGROUND_COLOR)\n",
              "      GL.clearColor(BACKGROUND_COLOR[0],\n",
              "                    BACKGROUND_COLOR[1],\n",
              "                    BACKGROUND_COLOR[2],\n",
              "                    1.0);\n",
              "    else\n",
              "      GL.clearColor(0.2, 0.2, 0.2, 1.0);\n",
              "    GL.enable(GL.DEPTH_TEST);\n",
              "\n",
              "    var shader_program;\n",
              "    if (DIMENSION == 2)\n",
              "      shader_program = initialize_shader(\n",
              "          GL, VERTEX_SHADER_SOURCE_2D, FRAGMENT_SHADER_SOURCE_2D);\n",
              "    else if (DIMENSION == 3)\n",
              "      shader_program = initialize_shader(\n",
              "          GL, VERTEX_SHADER_SOURCE_3D, FRAGMENT_SHADER_SOURCE_3D);\n",
              "\n",
              "    SHADER = {\n",
              "      program: shader_program,\n",
              "      attribute: {\n",
              "          vertex_position: GL.getAttribLocation(shader_program, 'vertex_position'),\n",
              "          position: GL.getAttribLocation(shader_program, 'position'),\n",
              "          size: GL.getAttribLocation(shader_program, 'size'),\n",
              "          color: GL.getAttribLocation(shader_program, 'color'),\n",
              "      },\n",
              "      uniform: {\n",
              "          color: GL.getUniformLocation(shader_program, 'color'),\n",
              "          global_size: GL.getUniformLocation(shader_program, 'global_size'),\n",
              "          use_global_size: GL.getUniformLocation(shader_program, 'use_global_size'),\n",
              "          global_color: GL.getUniformLocation(shader_program, 'global_color'),\n",
              "          use_global_color: GL.getUniformLocation(shader_program, 'use_global_color'),\n",
              "          use_position: GL.getUniformLocation(shader_program, 'use_position')\n",
              "      },\n",
              "    };\n",
              "\n",
              "    if (DIMENSION == 2) {\n",
              "      SHADER.uniform['screen_position'] = GL.getUniformLocation(shader_program, 'screen_position');\n",
              "      SHADER.uniform['screen_size'] = GL.getUniformLocation(shader_program, 'screen_size');\n",
              "    } else if (DIMENSION == 3) {\n",
              "      SHADER.attribute['vertex_normal'] = GL.getAttribLocation(shader_program, 'vertex_normal');\n",
              "      SHADER.uniform['perspective'] = GL.getUniformLocation(shader_program, 'perspective');\n",
              "      SHADER.uniform['light_direction'] = GL.getUniformLocation(shader_program, 'light_direction');\n",
              "    }\n",
              "\n",
              "    GL.useProgram(shader_program);\n",
              "\n",
              "    GL.uniform4f(SHADER.uniform.color, 0.9, 0.9, 1.0, 1.0);\n",
              "    GL.uniform1f(SHADER.uniform.global_size, 1.0);\n",
              "    GL.uniform1i(SHADER.uniform.use_global_size, true);\n",
              "\n",
              "    GL.uniform3f(SHADER.uniform.global_color, 1.0, 1.0, 1.0);\n",
              "    GL.uniform1i(SHADER.uniform.use_global_color, true);\n",
              "    GL.uniform1f(SHADER.uniform.use_position, 1.0);\n",
              "\n",
              "    var inorm = 1.0 / Math.sqrt(3);\n",
              "    GL.uniform3f(SHADER.uniform.light_direction, inorm, -inorm, inorm)\n",
              "\n",
              "    SHAPE['Disk'] = make_disk(GL, SHADER, 16, 0.5);\n",
              "    SHAPE['Sphere'] = make_sphere(GL, SHADER, 16, 16, 0.5);\n",
              "\n",
              "    const vao = GL.createVertexArray();\n",
              "    GL.bindVertexArray(vao);\n",
              "  }\n",
              "\n",
              "  function make_disk(gl, shader, segments, radius) {\n",
              "    var position = new Float32Array(segments * DIMENSION * 3);\n",
              "    for (var s = 0 ; s < segments ; s++) {\n",
              "        const th = 2 * s / segments * Math.PI;\n",
              "        const th_p = 2 * (s + 1) / segments * Math.PI;\n",
              "        position.set([0.0, 0.0], s * 3 * DIMENSION);\n",
              "        position.set([radius * Math.cos(th), radius * Math.sin(th)],\n",
              "                     s * 3 * DIMENSION + DIMENSION);\n",
              "        position.set([radius * Math.cos(th_p), radius * Math.sin(th_p)],\n",
              "                     s * 3 * DIMENSION + 2 * DIMENSION);\n",
              "    }\n",
              "\n",
              "    var buffer = gl.createBuffer();\n",
              "    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n",
              "    gl.bufferData(gl.ARRAY_BUFFER, position, gl.STATIC_DRAW);\n",
              "\n",
              "    return {\n",
              "      vertex_position: position,\n",
              "      vertex_buffer: buffer,\n",
              "      vertex_count: segments * 3,\n",
              "    };\n",
              "  }\n",
              "\n",
              "  function make_sphere(gl, shader, horizontal_segments, vertical_segments, radius) {\n",
              "    const stride = DIMENSION * 3 * 2;  // 3 vertices per tri, two tris per quad.\n",
              "    if (DIMENSION != 3) {\n",
              "      return null;\n",
              "      // Error Checking.\n",
              "    }\n",
              "\n",
              "    var position = new Float32Array(vertical_segments * horizontal_segments * stride);\n",
              "    var normal = new Float32Array(vertical_segments * horizontal_segments * stride);\n",
              "\n",
              "    var dtheta = 2 * Math.PI / horizontal_segments;\n",
              "    var dphi = Math.PI / vertical_segments;\n",
              "\n",
              "    for (var vs = 0 ; vs < vertical_segments ; vs++) {\n",
              "      const phi_0 = vs * dphi;\n",
              "      const phi_1 = (vs + 1) * dphi;\n",
              "      const offset = vs * horizontal_segments * stride;\n",
              "      for (var hs = 0 ; hs < horizontal_segments ; hs++) {\n",
              "        const theta_0 = hs * dtheta;\n",
              "        const theta_1 = (hs + 1) * dtheta;\n",
              "\n",
              "        const x0 = radius * Math.sin(phi_0) * Math.cos(theta_0);\n",
              "        const y0 = radius * Math.sin(phi_0) * Math.sin(theta_0);\n",
              "        const z0 = radius * Math.cos(phi_0);\n",
              "\n",
              "        const x1 = radius * Math.sin(phi_1) * Math.cos(theta_0);\n",
              "        const y1 = radius * Math.sin(phi_1) * Math.sin(theta_0);\n",
              "        const z1 = radius * Math.cos(phi_1);\n",
              "\n",
              "        const x2 = radius * Math.sin(phi_0) * Math.cos(theta_1);\n",
              "        const y2 = radius * Math.sin(phi_0) * Math.sin(theta_1);\n",
              "        const z2 = radius * Math.cos(phi_0);\n",
              "\n",
              "        const x3 = radius * Math.sin(phi_1) * Math.cos(theta_1);\n",
              "        const y3 = radius * Math.sin(phi_1) * Math.sin(theta_1);\n",
              "        const z3 = radius * Math.cos(phi_1);\n",
              "\n",
              "        position.set([x0, y0, z0,\n",
              "                      x1, y1, z1,\n",
              "                      x2, y2, z2,\n",
              "                      x1, y1, z1,\n",
              "                      x3, y3, z3,\n",
              "                      x2, y2, z2], offset + hs * stride);\n",
              "\n",
              "        normal.set([x0 / radius, y0 / radius, z0 / radius,\n",
              "                    x1 / radius, y1 / radius, z1 / radius,\n",
              "                    x2 / radius, y2 / radius, z2 / radius,\n",
              "                    x1 / radius, y1 / radius, z1 / radius,\n",
              "                    x3 / radius, y3 / radius, z3 / radius,\n",
              "                    x2 / radius, y2 / radius, z2 / radius], offset + hs * stride);\n",
              "      }\n",
              "    }\n",
              "\n",
              "    var buffer = gl.createBuffer();\n",
              "    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n",
              "    gl.bufferData(gl.ARRAY_BUFFER, position, gl.STATIC_DRAW);\n",
              "\n",
              "    var normal_buffer = gl.createBuffer();\n",
              "    gl.bindBuffer(gl.ARRAY_BUFFER, normal_buffer);\n",
              "    gl.bufferData(gl.ARRAY_BUFFER, normal, gl.STATIC_DRAW);\n",
              "\n",
              "    return {\n",
              "      vertex_position: position,\n",
              "      vertex_buffer: buffer,\n",
              "      vertex_normals: normal,\n",
              "      vertex_normal_buffer: normal_buffer,\n",
              "      vertex_count: vertical_segments * horizontal_segments * 3 * 2\n",
              "    };\n",
              "  }\n",
              "\n",
              "  function set_attribute(geometry, name) {\n",
              "    if (!geometry[name]) {\n",
              "      if (SIZE[name] == 1)\n",
              "        GL.uniform1f(SHADER.uniform['global_' + name], 1.0);\n",
              "      else if (SIZE[name] == 2)\n",
              "        GL.uniform2f(SHADER.uniform['global_' + name], 1.0, 1.0);\n",
              "      else if (SIZE[name] == 3)\n",
              "        GL.uniform3f(SHADER.uniform['global_' + name], 1.0, 1.0, 1.0);\n",
              "\n",
              "      GL.uniform1i(SHADER.uniform['use_global_' + name], true);\n",
              "    } else if (geometry[name + '_type'] == 'GLOBAL') {\n",
              "      if (SIZE[name] == 1)\n",
              "        GL.uniform1fv(SHADER.uniform['global_' + name], geometry[name]);\n",
              "      else if (SIZE[name] == 2)\n",
              "        GL.uniform2fv(SHADER.uniform['global_' + name], geometry[name]);\n",
              "      else if (SIZE[name] == 3)\n",
              "        GL.uniform3fv(SHADER.uniform['global_' + name], geometry[name]);\n",
              "\n",
              "      GL.uniform1i(SHADER.uniform['use_global_' + name], true);\n",
              "    } else {\n",
              "      GL.enableVertexAttribArray(SHADER.attribute[name]);\n",
              "      var stride = SIZE[name] * geometry.count;\n",
              "      GL.bindBuffer(GL.ARRAY_BUFFER, geometry[name + '_buffer']);\n",
              "      if (geometry[name + '_type'] == GL.DYNAMIC_DRAW) {\n",
              "        const data = geometry[name].slice(CURRENT_FRAME * stride,\n",
              "                                          (CURRENT_FRAME + 1) * stride);\n",
              "        GL.bufferSubData(GL.ARRAY_BUFFER, 0, data);\n",
              "      }\n",
              "      GL.vertexAttribPointer(\n",
              "        SHADER.attribute[name],\n",
              "        SIZE[name],\n",
              "        GL.FLOAT,\n",
              "        false,\n",
              "        0,\n",
              "        0\n",
              "      );\n",
              "      GL.vertexAttribDivisor(SHADER.attribute[name], 1);\n",
              "\n",
              "      GL.uniform1i(SHADER.uniform['use_global_' + name], false);\n",
              "    }\n",
              "  }\n",
              "\n",
              "  var loops = 0;\n",
              "\n",
              "  function update_frame() {\n",
              "    if(!GL) {\n",
              "      window.requestAnimationFrame(update_frame);\n",
              "      return;\n",
              "    }\n",
              "\n",
              "    var cur_time = Date.now() / 1000.0;\n",
              "    if (FRAME_RATE > 0 && cur_time - LAST_FRAME_TIME < 1.0 / FRAME_RATE) {\n",
              "      window.requestAnimationFrame(update_frame);\n",
              "      return;\n",
              "    }\n",
              "    LAST_FRAME_TIME = cur_time;\n",
              "\n",
              "    GL.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n",
              "\n",
              "    if (!IS_LOADED) {\n",
              "      window.requestAnimationFrame(update_frame);\n",
              "      return;\n",
              "    }\n",
              "\n",
              "    if (DIMENSION == 2) {\n",
              "      var camera_x = SCREEN_POSITION[0];\n",
              "      var camera_y = SCREEN_POSITION[1];\n",
              "\n",
              "      if (DRAGGING) {\n",
              "        const delta = get_drag_offset();\n",
              "        camera_x += delta[0];\n",
              "        camera_y += delta[1];\n",
              "      }\n",
              "      GL.uniform2f(SHADER.uniform.screen_position, camera_x, camera_y);\n",
              "      GL.uniform2f(SHADER.uniform.screen_size, CAMERA_SIZE[0], CAMERA_SIZE[1]);\n",
              "    } else if (DIMENSION == 3) {\n",
              "\n",
              "      // Now these are some janky globals.\n",
              "      if (DRAGGING) {\n",
              "        var yaw = YAW;\n",
              "        var pitch = PITCH;\n",
              "        const delta = get_drag_offset();\n",
              "        YAW = YAW - delta[0];\n",
              "        PITCH = PITCH - delta[1];\n",
              "        make_look_at();\n",
              "        YAW = yaw;\n",
              "        PITCH = pitch;\n",
              "      }\n",
              "\n",
              "      GL.uniformMatrix4fv(SHADER.uniform.perspective, false,\n",
              "                          mat4.multiply(EYE, PERSPECTIVE, LOOK_AT));\n",
              "    }\n",
              "\n",
              "    if (CURRENT_FRAME > FRAME_COUNT - 1) {\n",
              "      loops++;\n",
              "      CURRENT_FRAME = 0;\n",
              "    }\n",
              "\n",
              "    for (var name in GEOMETRY) {\n",
              "      var geom = GEOMETRY[name];\n",
              "\n",
              "      set_attribute(geom, 'size');\n",
              "      set_attribute(geom, 'color');\n",
              "\n",
              "      var shape = geom.shape;\n",
              "      var vertex_buffer;\n",
              "      var vertex_count;\n",
              "      var vertex_normal_buffer = null;\n",
              "\n",
              "      if (shape != 'Bond') {\n",
              "        shape = SHAPE[shape];\n",
              "\n",
              "        update_shape(geom);\n",
              "\n",
              "        vertex_buffer = shape.vertex_buffer;\n",
              "        vertex_count = shape.vertex_count;\n",
              "        vertex_normal_buffer = shape.vertex_normal_buffer;\n",
              "      } else {\n",
              "        vertex_count = update_bond_vertex_data(GEOMETRY[geom.reference_geometry],\n",
              "                                               geom);\n",
              "        vertex_buffer = geom.vertex_buffer;\n",
              "        vertex_normal_buffer = geom.vertex_normal_buffer;\n",
              "      }\n",
              "\n",
              "      GL.enableVertexAttribArray(SHADER.attribute.vertex_position);\n",
              "      GL.bindBuffer(GL.ARRAY_BUFFER, vertex_buffer);\n",
              "      GL.vertexAttribPointer(\n",
              "        SHADER.attribute.vertex_position,\n",
              "        DIMENSION,\n",
              "        GL.FLOAT,\n",
              "        false,\n",
              "        0,\n",
              "        0\n",
              "      );\n",
              "\n",
              "      if (DIMENSION == 3 && vertex_normal_buffer) {\n",
              "        GL.enableVertexAttribArray(SHADER.attribute.vertex_normal);\n",
              "        GL.bindBuffer(GL.ARRAY_BUFFER, vertex_normal_buffer);\n",
              "        GL.vertexAttribPointer(\n",
              "          SHADER.attribute.vertex_normal,\n",
              "          DIMENSION,\n",
              "          GL.FLOAT,\n",
              "          false,\n",
              "          0,\n",
              "          0\n",
              "        );\n",
              "      }\n",
              "\n",
              "      if (shape == 'Bond')\n",
              "      {\n",
              "        GL.drawArrays(GL.TRIANGLES, 0, vertex_count);\n",
              "      } else {\n",
              "        GL.drawArraysInstanced(GL.TRIANGLES, 0, vertex_count, geom.count);\n",
              "      }\n",
              "    }\n",
              "\n",
              "    if(IS_PLAYING) {\n",
              "      CURRENT_FRAME++;\n",
              "      FRAME_RANGE.value = CURRENT_FRAME;\n",
              "    }\n",
              "\n",
              "    window.requestAnimationFrame(update_frame);\n",
              "  }\n",
              "\n",
              "  function update_shape(geometry) {\n",
              "    GL.enableVertexAttribArray(SHADER.attribute.position);\n",
              "    var stride = geometry.count * DIMENSION;\n",
              "    GL.bindBuffer(GL.ARRAY_BUFFER, geometry.position_buffer);\n",
              "    if (geometry.position_type == GL.DYNAMIC_DRAW) {\n",
              "      const positions = geometry.position.subarray(CURRENT_FRAME * stride,\n",
              "                                                   (CURRENT_FRAME + 1) * stride);\n",
              "      GL.bufferSubData(GL.ARRAY_BUFFER, 0, positions);\n",
              "    }\n",
              "    GL.vertexAttribPointer(\n",
              "      SHADER.attribute.position,\n",
              "      DIMENSION,\n",
              "      GL.FLOAT,\n",
              "      false,\n",
              "      0,\n",
              "      0\n",
              "    );\n",
              "    GL.vertexAttribDivisor(SHADER.attribute.position, 1);\n",
              "    GL.uniform1f(SHADER.uniform.use_position, 1.0);\n",
              "  }\n",
              "\n",
              "  function update_bond_vertex_data(reference_geometry, bonds) {\n",
              "    const geom = reference_geometry;\n",
              "    const N = geom.count;\n",
              "    var stride = N * DIMENSION;\n",
              "    const positions = geom.position.subarray(CURRENT_FRAME * stride,\n",
              "                                             (CURRENT_FRAME + 1) * stride);\n",
              "    const neighbors = bonds.max_neighbors;\n",
              "\n",
              "    var vertex_count = 0;\n",
              "    var vertices = bonds.vertices;\n",
              "    var normals = bonds.normals;\n",
              "\n",
              "    for (var i = 0 ; i < N ; i++) {\n",
              "      var r_i = positions.subarray(i * DIMENSION, (i + 1) * DIMENSION);\n",
              "      for (var j = 0 ; j < neighbors ; j++) {\n",
              "        const idx = i * neighbors + j;\n",
              "        const nbr_idx = Math.round(bonds.neighbor_idx[idx]);\n",
              "\n",
              "        if (nbr_idx < i) {\n",
              "          var r_j = positions.subarray(nbr_idx * DIMENSION, (nbr_idx + 1) * DIMENSION);\n",
              "          vertex_count = push_bond(vertices, normals, vertex_count, r_i, r_j, bonds.diameter[0] / 2.0);\n",
              "        }\n",
              "      }\n",
              "    }\n",
              "\n",
              "    GL.bindBuffer(GL.ARRAY_BUFFER, bonds.vertex_buffer);\n",
              "    GL.bufferData(GL.ARRAY_BUFFER, vertices, GL.DYNAMIC_DRAW);\n",
              "\n",
              "    GL.bindBuffer(GL.ARRAY_BUFFER, bonds.vertex_normal_buffer);\n",
              "    GL.bufferData(GL.ARRAY_BUFFER, normals, GL.DYNAMIC_DRAW);\n",
              "\n",
              "    GL.uniform1f(SHADER.uniform.use_position, 0.0);\n",
              "    GL.uniform1i(SHADER.uniform.use_global_size, 1);\n",
              "    GL.uniform1i(SHADER.uniform.use_global_color, 1);\n",
              "\n",
              "    return vertex_count;\n",
              "  }\n",
              "\n",
              "  BOND_C_TABLE = [];\n",
              "  BOND_S_TABLE = [];\n",
              "  for (var i = 0 ; i < BOND_SEGMENTS ; i++)\n",
              "  {\n",
              "    BOND_C_TABLE.push(Math.cos(2 * i * Math.PI / BOND_SEGMENTS));\n",
              "    BOND_S_TABLE.push(Math.sin(2 * i * Math.PI / BOND_SEGMENTS));\n",
              "  }\n",
              "\n",
              "  function push_bond(vertices, normals, vertex_count, r_i, r_j, radius) {\n",
              "    var dr = vec3.fromValues(r_i[0] - r_j[0],\n",
              "                             r_i[1] - r_j[1],\n",
              "                             r_i[2] - r_j[2]);\n",
              "\n",
              "    if (Math.abs(dr[0]) > BOX_SIZE[0] / 2.0 ||\n",
              "        Math.abs(dr[1]) > BOX_SIZE[1] / 2.0 ||\n",
              "        Math.abs(dr[2]) > BOX_SIZE[2] / 2.0)\n",
              "      return vertex_count;\n",
              "\n",
              "    var up = vec3.fromValues(0.0, 1.0, 0.0);\n",
              "    var left = vec3.fromValues(0.0, 1.0, 0.0);\n",
              "\n",
              "    vec3.cross(left, up, dr);\n",
              "    vec3.normalize(left, left);\n",
              "\n",
              "    vec3.cross(up, left, dr);\n",
              "    vec3.normalize(up, up);\n",
              "\n",
              "    var normal = vec3.fromValues(0.0, 0.0, 0.0);\n",
              "\n",
              "    for (var i = 0 ; i < BOND_SEGMENTS ; i++) {\n",
              "      const c1 = radius * BOND_C_TABLE[i];\n",
              "      const c2 = radius * BOND_C_TABLE[(i + 1) % BOND_SEGMENTS];\n",
              "      const s1 = radius * BOND_S_TABLE[i];\n",
              "      const s2 = radius * BOND_S_TABLE[(i + 1) % BOND_SEGMENTS];\n",
              "\n",
              "      vertices.set([\n",
              "        r_j[0] + left[0] * c1 + up[0] * s1,\n",
              "        r_j[1] + left[1] * c1 + up[1] * s1,\n",
              "        r_j[2] + left[2] * c1 + up[2] * s1,\n",
              "\n",
              "        r_i[0] + left[0] * c1 + up[0] * s1,\n",
              "        r_i[1] + left[1] * c1 + up[1] * s1,\n",
              "        r_i[2] + left[2] * c1 + up[2] * s1,\n",
              "\n",
              "        r_j[0] + left[0] * c2 + up[0] * s2,\n",
              "        r_j[1] + left[1] * c2 + up[1] * s2,\n",
              "        r_j[2] + left[2] * c2 + up[2] * s2,\n",
              "\n",
              "        r_i[0] + left[0] * c1 + up[0] * s1,\n",
              "        r_i[1] + left[1] * c1 + up[1] * s1,\n",
              "        r_i[2] + left[2] * c1 + up[2] * s1,\n",
              "\n",
              "        r_i[0] + left[0] * c2 + up[0] * s2,\n",
              "        r_i[1] + left[1] * c2 + up[1] * s2,\n",
              "        r_i[2] + left[2] * c2 + up[2] * s2,\n",
              "\n",
              "        r_j[0] + left[0] * c2 + up[0] * s2,\n",
              "        r_j[1] + left[1] * c2 + up[1] * s2,\n",
              "        r_j[2] + left[2] * c2 + up[2] * s2,\n",
              "      ], 3 * (vertex_count + 6 * i));\n",
              "\n",
              "      vec3.cross(normal,\n",
              "                 [r_j[0] - r_i[0] + left[0] * c1 + up[0] * s1,\n",
              "                  r_j[1] - r_i[1] + left[1] * c1 + up[1] * s1,\n",
              "                  r_j[2] - r_i[2] + left[2] * c1 + up[2] * s1],\n",
              "                 [left[0] * (c1 - c2) + up[0] * (s1 - s2),\n",
              "                  left[1] * (c1 - c2) + up[1] * (s1 - s2),\n",
              "                  left[2] * (c1 - c2) + up[2] * (s1 - s2)]);\n",
              "      vec3.normalize(normal, normal);\n",
              "\n",
              "      normals.set([\n",
              "        normal[0], normal[1], normal[2],\n",
              "        normal[0], normal[1], normal[2],\n",
              "        normal[0], normal[1], normal[2],\n",
              "        normal[0], normal[1], normal[2],\n",
              "        normal[0], normal[1], normal[2],\n",
              "        normal[0], normal[1], normal[2],\n",
              "      ], 3 * (vertex_count + 6 * i));\n",
              "    }\n",
              "    return vertex_count + 6 * BOND_SEGMENTS;\n",
              "  }\n",
              "\n",
              "  // SHADER CODE\n",
              "\n",
              "  const VERTEX_SHADER_SOURCE_2D = `#version 300 es\n",
              "    // Vertex Shader Program.\n",
              "    in vec2 vertex_position;\n",
              "    in vec2 position;\n",
              "    in float size;\n",
              "    in vec3 color;\n",
              "\n",
              "    out vec4 v_color;\n",
              "\n",
              "    uniform float use_position;\n",
              "\n",
              "    uniform vec2 screen_position;\n",
              "    uniform vec2 screen_size;\n",
              "\n",
              "    uniform float global_size;\n",
              "    uniform bool use_global_size;\n",
              "\n",
              "    uniform vec3 global_color;\n",
              "    uniform bool use_global_color;\n",
              "\n",
              "    void main() {\n",
              "      float _size = use_global_size ? global_size : size;\n",
              "      vec2 v = (_size * vertex_position + position - screen_position) / screen_size;\n",
              "      gl_Position = vec4(v, 0.0, 1.0);\n",
              "      v_color = vec4(use_global_color ? global_color : color, 1.0f);\n",
              "    }\n",
              "  `;\n",
              "\n",
              "  const FRAGMENT_SHADER_SOURCE_2D = `#version 300 es\n",
              "    precision mediump float;\n",
              "\n",
              "    in vec4 v_color;\n",
              "\n",
              "    out vec4 outColor;\n",
              "\n",
              "    void main() {\n",
              "      outColor = v_color;\n",
              "    }\n",
              "  `;\n",
              "\n",
              "   const VERTEX_SHADER_SOURCE_3D = `#version 300 es\n",
              "    // Vertex Shader Program.\n",
              "    in vec3 vertex_position;\n",
              "    in vec3 vertex_normal;\n",
              "\n",
              "    in vec3 position;\n",
              "    in float size;\n",
              "    in vec3 color;\n",
              "\n",
              "    out vec4 v_color;\n",
              "    out vec3 v_normal;\n",
              "\n",
              "    uniform mat4 perspective;\n",
              "\n",
              "    uniform float use_position;\n",
              "\n",
              "    uniform float global_size;\n",
              "    uniform bool use_global_size;\n",
              "\n",
              "    uniform vec3 global_color;\n",
              "    uniform bool use_global_color;\n",
              "\n",
              "    void main() {\n",
              "      vec3 pos = use_position * position;\n",
              "      float _size = use_global_size ? global_size : size;\n",
              "\n",
              "      vec3 v = (_size * vertex_position + pos);\n",
              "      gl_Position = perspective * vec4(v, 1.0);\n",
              "\n",
              "      v_color = vec4(use_global_color ? global_color : color, 1.0f);\n",
              "      v_normal = vertex_normal;\n",
              "    }\n",
              "  `;\n",
              "\n",
              "  const FRAGMENT_SHADER_SOURCE_3D = `#version 300 es\n",
              "    precision mediump float;\n",
              "\n",
              "    in vec4 v_color;\n",
              "    in vec3 v_normal;\n",
              "\n",
              "    uniform vec3 light_direction;\n",
              "\n",
              "    out vec4 outColor;\n",
              "\n",
              "    void main() {\n",
              "      float diffuse_magnitude = clamp(-dot(v_normal, light_direction), 0.0, 1.0) + 0.2;\n",
              "\n",
              "      outColor = vec4(vec3(v_color) * diffuse_magnitude, v_color.a);\n",
              "    }\n",
              "  `;\n",
              "\n",
              "  function initialize_shader(gl, vertex_shader_source, fragment_shader_source) {\n",
              "\n",
              "    const vertex_shader = compile_shader(\n",
              "      gl, gl.VERTEX_SHADER, vertex_shader_source);\n",
              "    const fragment_shader = compile_shader(\n",
              "      gl, gl.FRAGMENT_SHADER, fragment_shader_source);\n",
              "\n",
              "    const shader_program = gl.createProgram();\n",
              "    gl.attachShader(shader_program, vertex_shader);\n",
              "    gl.attachShader(shader_program, fragment_shader);\n",
              "    gl.linkProgram(shader_program);\n",
              "\n",
              "    if (!gl.getProgramParameter(shader_program, gl.LINK_STATUS)) {\n",
              "      alert(\n",
              "        'Unable to initialize shader program: ' +\n",
              "        gl.getProgramInfoLog(shader_program)\n",
              "        );\n",
              "        return null;\n",
              "    }\n",
              "    return shader_program;\n",
              "  }\n",
              "\n",
              "  function compile_shader(gl, type, source) {\n",
              "    const shader = gl.createShader(type);\n",
              "    gl.shaderSource(shader, source);\n",
              "    gl.compileShader(shader);\n",
              "\n",
              "    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n",
              "      alert('An error occured compiling shader: ' + gl.getShaderInfoLog(shader));\n",
              "      gl.deleteShader(shader);\n",
              "      return null;\n",
              "    }\n",
              "\n",
              "    return shader;\n",
              "  }\n",
              "\n",
              "  // UI\n",
              "\n",
              "  var DRAG_START;\n",
              "  var DRAG_CURRENT;\n",
              "  var DRAGGING = false;\n",
              "\n",
              "  CANVAS.addEventListener('mousedown', function(e) {\n",
              "    DRAG_START = [e.offsetX, e.offsetY];\n",
              "    DRAGGING = true;\n",
              "  });\n",
              "\n",
              "  CANVAS.addEventListener('mousemove', function(e) {\n",
              "    DRAG_CURRENT = [e.offsetX, e.offsetY];\n",
              "  });\n",
              "\n",
              "  CANVAS.addEventListener('mouseup', function(e) {\n",
              "    const delta = get_drag_offset();\n",
              "    if (DIMENSION == 2) {\n",
              "      SCREEN_POSITION = [SCREEN_POSITION[0] + delta[0],\n",
              "                         SCREEN_POSITION[1] + delta[1]];\n",
              "    } else if (DIMENSION == 3) {\n",
              "      YAW -= delta[0];\n",
              "      PITCH -= delta[1];\n",
              "\n",
              "      if (PITCH > Math.PI / 2.1)\n",
              "        PITCH = Math.PI / 2.1;\n",
              "      if (PITCH < -Math.PI / 2.1)\n",
              "        PITCH = -Math.PI / 2.1;\n",
              "\n",
              "      make_look_at();\n",
              "    }\n",
              "\n",
              "    DRAGGING = false;\n",
              "  });\n",
              "\n",
              "  function toggle_play() {\n",
              "    IS_PLAYING = !IS_PLAYING;\n",
              "    console.log(PLAY_PAUSE_BUTTON);\n",
              "    if(IS_PLAYING)\n",
              "      PLAY_PAUSE_BUTTON.innerHTML = '||';\n",
              "    else\n",
              "      PLAY_PAUSE_BUTTON.innerHTML = '>';\n",
              "  }\n",
              "\n",
              "  function change_frame(value) {\n",
              "    if (!IS_LOADED)\n",
              "      return;\n",
              "    CURRENT_FRAME = value;\n",
              "    FRAME_RANGE.innerHTML = value;\n",
              "  }\n",
              "\n",
              "  function get_drag_offset() {\n",
              "    var delta = [DRAG_START[0] - DRAG_CURRENT[0],\n",
              "                 -DRAG_START[1] + DRAG_CURRENT[1]];\n",
              "    delta = [delta[0] / canvas.width * 2, delta[1] / canvas.height * 2];\n",
              "    if (DIMENSION == 2) {\n",
              "      delta = [delta[0] * CAMERA_SIZE[0],\n",
              "               delta[1] * CAMERA_SIZE[1]];\n",
              "    }\n",
              "    return delta;\n",
              "  }\n",
              "\n",
              "  const SCALE_SPEED = 0.1;\n",
              "  CANVAS.addEventListener('mousewheel', function(e) {\n",
              "    var delta = Math.sign(e.wheelDeltaY);\n",
              "    if (navigator.appVersion.indexOf('Mac'))\n",
              "      delta *= -0.1;\n",
              "    if (DIMENSION == 2) {\n",
              "      CAMERA_SIZE[0] = CAMERA_SIZE[0] * (1 + delta * SCALE_SPEED);\n",
              "      CAMERA_SIZE[1] = CAMERA_SIZE[1] * (1 + delta * SCALE_SPEED);\n",
              "    } else if (DIMENSION == 3) {\n",
              "      VIEW_DISTANCE = VIEW_DISTANCE * (1 + delta * SCALE_SPEED);\n",
              "      make_look_at();\n",
              "    }\n",
              "    e.preventDefault();\n",
              "  }, false);\n",
              "  CANVAS.addEventListener('DOMMouseScroll', function(e) {\n",
              "    const delta = Math.sign(e.detail);\n",
              "    if (DIMENSION == 2) {\n",
              "      CAMERA_SIZE[0] = CAMERA_SIZE[0] * (1 + delta * SCALE_SPEED);\n",
              "      CAMERA_SIZE[1] = CAMERA_SIZE[1] * (1 + delta * SCALE_SPEED);\n",
              "    } else if (DIMENSION == 3) {\n",
              "      VIEW_DISTANCE = VIEW_DISTANCE * (1 + delta * SCALE_SPEED);\n",
              "      make_look_at();\n",
              "    }\n",
              "    e.preventDefault();\n",
              "  }, false);\n",
              "\n",
              "\n",
              "  // SERIALIZATION UTILITIES\n",
              "  function decode(sBase64, nBlocksSize) {\n",
              "    var chrs = atob(sBase64);\n",
              "    var array = new Uint8Array(new ArrayBuffer(chrs.length));\n",
              "\n",
              "    for(var i = 0 ; i < chrs.length ; i++) {\n",
              "      array[i] = chrs.charCodeAt(i);\n",
              "    }\n",
              "\n",
              "    return new Float32Array(array.buffer);\n",
              "  }\n",
              "\n",
              "  function from_json(data) {\n",
              "    data = data.data['application/json'];\n",
              "\n",
              "    if (typeof data == 'string') {\n",
              "      return JSON.parse(data);\n",
              "    }\n",
              "\n",
              "    return data;\n",
              "  }\n",
              "\n",
              "  // RUN CELL\n",
              "\n",
              "  load_simulation();\n",
              "  update_frame();\n",
              "</script>\n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2cuLb1IQnnZo"
      },
      "source": [
        "## Larger Simulation with Neighbor Lists"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MQQWnGuxnvZf"
      },
      "source": [
        "We can use neighbor lists to run a much larger version of this simulation. As their name suggests, neighbor lists are lists of particles nearby a central particle. By keeping track of neighbors, we can compute the energy of the system much more efficiently. This becomes increasingly true as the simulation gets larger. "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5Zzf9meloDql"
      },
      "source": [
        "N = 10000\n",
        "box_size = quantity.box_size_at_number_density(N, 0.8, 2)\n",
        "displacement, shift = space.periodic(box_size) \n",
        "\n",
        "kT = lambda t: np.where(t < 50.0, 0.1, 0.01)"
      ],
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lcnnfeoQoDqm"
      },
      "source": [
        "As before we randomly initialize the system."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qEFpYkomoDqm"
      },
      "source": [
        "key, split = random.split(key)\n",
        "R = box_size * random.uniform(split, (N, dimension), dtype=np.float64)\n",
        "\n",
        "sigma = np.array([[1.0, 1.2], [1.2, 1.4]])\n",
        "N_2 = int(N / 2)\n",
        "species = np.where(np.arange(N) < N_2, 0, 1)"
      ],
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WJWuZXFfoDqm"
      },
      "source": [
        "Then we need to construct our simulation operators. This time we use the `energy.soft_sphere_neighbor_fn` to create two functions: one that constructs lists of neighbors and one that computes the energy."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2O3OLWRaoDqm",
        "outputId": "f76ea774-d022-4321-acc6-0fa5f4379c8b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "neighbor_fn, energy_fn = energy.soft_sphere_neighbor_list(displacement,\n",
        "                                                          box_size,\n",
        "                                                          species=species, \n",
        "                                                          sigma=sigma)\n",
        "\n",
        "init, apply = simulate.nvt_nose_hoover(energy_fn, shift, dt, kT(0.), tau=200*dt)\n",
        "\n",
        "nbrs = neighbor_fn(R)\n",
        "state = init(key, R, neighbor=nbrs)"
      ],
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:absl:Using a deprecated code path to create / update neighbor lists. It will be removed in a later version of JAX MD. Using `neighbor_fn.allocate` and `neighbor_fn.update` is preferred.\n",
            "/usr/local/lib/python3.7/dist-packages/jax/_src/ops/scatter.py:90: FutureWarning: scatter inputs have incompatible types: cannot safely cast value from dtype=int64 to dtype=int32. In future JAX releases this will result in an error.\n",
            "  FutureWarning)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xY4dnk53oDqm"
      },
      "source": [
        "Now let's actually do the simulation. This time our simulation step function will also update the neighbors. As above, we will also only record position data every hundred steps."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OibU3VOQoDqm"
      },
      "source": [
        "write_every = 100\n",
        "\n",
        "def step_fn(i, state_nbrs_log):\n",
        "  state, nbrs, log = state_nbrs_log\n",
        "\n",
        "  t = i * dt\n",
        "\n",
        "  # Log information about the simulation.\n",
        "  T = quantity.temperature(state.velocity)\n",
        "  # log['kT'] = ops.index_update(log['kT'], i, T)\n",
        "  log['kT'].at[i].set(T)\n",
        "  H = simulate.nvt_nose_hoover_invariant(energy_fn, state, kT(t), neighbor=nbrs)\n",
        "  # log['H'] = ops.index_update(log['H'], i, H)\n",
        "  log['H'].at[i].set(H)\n",
        "  # Record positions every `write_every` steps.\n",
        "  #log['position'] = lax.cond(i % write_every == 0,\n",
        "  #                           lambda p: ops.index_update(p, \n",
        "  #                                                      i // write_every, \n",
        "  #                                                      state.position),\n",
        "  #                           lambda p: p,\n",
        "  #                           log['position'])\n",
        "\n",
        "  lax.cond(i % write_every == 0,\n",
        "            lambda p: p.at[i // write_every].set(state.position),\n",
        "            lambda p: p,\n",
        "            log['position'])\n",
        "\n",
        "  # Take a simulation step.\n",
        "  state = apply(state, kT=kT(t), neighbor=nbrs)\n",
        "  nbrs = neighbor_fn(state.position, nbrs)\n",
        "\n",
        "  return state, nbrs, log"
      ],
      "execution_count": 49,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7GyNMRbboDqm"
      },
      "source": [
        "To run our simulation we'll use `lax.fori_loop` which will execute the simulation a single call from python."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QGCAGy-ooDqm",
        "outputId": "191d9e39-a9a2-47cd-d41a-86d98ff8ee92",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "steps = 20000\n",
        "\n",
        "log = {\n",
        "    'kT': np.zeros((steps,)),\n",
        "    'H': np.zeros((steps,)),\n",
        "    'position': np.zeros((steps // write_every,) + R.shape) \n",
        "}\n",
        "\n",
        "state, nbrs, log = lax.fori_loop(0, steps, step_fn, (state, nbrs, log))\n",
        "\n",
        "R = state.position"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:absl:Using a deprecated code path to create / update neighbor lists. It will be removed in a later version of JAX MD. Using `neighbor_fn.allocate` and `neighbor_fn.update` is preferred.\n",
            "/usr/local/lib/python3.7/dist-packages/jax/_src/ops/scatter.py:90: FutureWarning: scatter inputs have incompatible types: cannot safely cast value from dtype=int64 to dtype=int32. In future JAX releases this will result in an error.\n",
            "  FutureWarning)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "87EOPGJPoDqm"
      },
      "source": [
        "Now, let's plot the temperature as a function of time. We see that the temperature tracks the goal temperature with some fluctuations."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 441
        },
        "id": "QMIkiaO6oDqm",
        "outputId": "b867e036-93ea-4d08-9fcd-f3dcc2cf4bc5"
      },
      "source": [
        "t = onp.arange(0, steps) * dt\n",
        "plt.plot(t, log['kT'], linewidth=3)\n",
        "plt.plot(t, kT(t), linewidth=3)\n",
        "format_plot('$t$', '$T$')\n",
        "finalize_plot()"
      ],
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x432 with 1 Axes>"
            ],
            "image/png": "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ozgmGo3qzTff1Oc+9znt3LlTubm55xzOy/T9QJKOHTum5uZmNTc3q62tTSdPnlRbW5vTYzkumY99Vi0We6ksy1J/f3/itG3bsizLwYlS5/Tp07r33nu1bNkyLVq0SJJ01VVX6fDhw5o8ebIOHz6siRMnOjxl8rz++utqaWlRa2urhoeH9fe//10PP/ywBgcHFY1G5Xa71d/fn9H7g8fjkcfj0Y033ihJuv3221VfX59V+4Ek/fa3v9XVV1+duJ+LFi3S66+/nlX7wofO99j/43Pl5f578ArqIlRUVKi7u1s9PT2KRCIKh8Pyer1Oj5V08Xhc69at07XXXqtVq1Ylzvd6vdq5c6ckaefOnVq4cKFTIybd/fffr9bWVrW0tOhHP/qR5s6dq8cee0w333yzmpqaJEmNjY0ZvT9MmjRJHo9H7733niSpvb1d06ZNy6r9QJKmTJmiN954QydPnlQ8Hld7e7umT5+eVfvCh8732H94fjwe15/+9Cfl5eUlDgVeClYzv0i/+c1vtGHDBsViMa1YsUL33HOP0yMl3e9//3vddddduu666xK/f7nvvvt0ww03qLq6Wn19fZoyZYo2bdqkCRMmODxt8u3fv1/btm3Tli1b1NPTo29+85s6duyYrr/+etXV1SknJ8fpEZPmrbfe0rp163T69GkVFxfrkUce0QcffJB1+8GPf/xjvfTSS3K73br++uv18MMPy7btjN4X7rvvPr322msaGBjQVVddpW984xv67Gc/+5GPfTweV21trdra2pSbm6sNGzaooqLikr83gQIAGIlDfAAAIxEoAICRCBQAwEgECgBgJAIFADASgQIAGIlAAWnmqaeeUllZmV588UWnRwGSikABaebgwYOSlFhpHshUBApIM52dnRo3bpw+/vGPOz0KkFQECkgTdXV1Kisr03vvvacTJ05oxowZKisrU1lZWWJdNCCTsJo5kCZmzpypyspKNTY2avbs2brlllsSl918880OTgYkB4EC0sSSJUs0NDSkxsZGVVZW6s4773R6JCCpOMQHpJHOzk5JZ15NAZmOQAFp5M0339SYMWNUVlbm9ChA0hEoIE1Eo1G98847mjZtWkZ93hBwPgQKSBNdXV0aHh7m8B6yBoEC0sTbb78tid8/IXsQKCBNHD16VJI0fvx4hycBUoO3mQNp4sOljTZu3Kh33nlH48aN0/Tp07V48WKHJwOSg1dQQJqYM2eOvvvd7yo3N1fPPPOMnnjiicRhPyATueLxeNzpIQAA+Ee8ggIAGIlAAQCMRKAAAEYiUAAAIxEoAICRCBQAwEgECgBgJAIFADASgQIAGOm/AJthjObF3iXeAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Rlq_kaeNoDqo"
      },
      "source": [
        "Now let's plot the Hamiltonian of the system. We see that it is invariant apart from changes to the temperature, as expected."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 441
        },
        "id": "LN5irdwUoDqo",
        "outputId": "94cad5b7-af70-4913-e1d9-1d21f3c81b2f"
      },
      "source": [
        "plt.plot(t, log['H'], linewidth=3)\n",
        "format_plot('$t$', '$H$')\n",
        "finalize_plot()"
      ],
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EoG1KAFyoDqo"
      },
      "source": [
        "Now let's plot a snapshot of the system."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 873
        },
        "id": "JfV79m3ioDqo",
        "outputId": "07f5d458-37a4-4206-e1c5-f0a5f93ad68b"
      },
      "source": [
        "ms = 10\n",
        "R_plt = onp.array(state.position)\n",
        "\n",
        "plt.plot(R_plt[:N_2, 0], R_plt[:N_2, 1], 'o', markersize=ms * 0.5)\n",
        "plt.plot(R_plt[N_2:, 0], R_plt[N_2:, 1], 'o', markersize=ms * 0.7)\n",
        "\n",
        "plt.xlim([0, np.max(R[:, 0])])\n",
        "plt.ylim([0, np.max(R[:, 1])])\n",
        "\n",
        "plt.axis('off')\n",
        "\n",
        "finalize_plot((2, 2))"
      ],
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x864 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tmtKpLp6oDqo"
      },
      "source": [
        "If we want, we can also draw an animation of the simulation using JAX MD's renderer."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 745
        },
        "id": "TFz5LNV5oDqo",
        "outputId": "b2b60841-e252-4afb-93c0-c85d10ec182a"
      },
      "source": [
        "from jax_md.colab_tools import renderer\n",
        "\n",
        "diameters = sigma[species, species]\n",
        "colors = np.where(species[:, None], \n",
        "                  np.array([[1.0, 0.5, 0.01]]), \n",
        "                  np.array([[0.35, 0.65, 0.85]]))\n",
        "\n",
        "renderer.render(box_size,\n",
        "                {\n",
        "                    'particles': renderer.Disk(log['position'], \n",
        "                                               diameters,\n",
        "                                               colors)\n",
        "                },\n",
        "                buffer_size=20,\n",
        "                resolution=(700, 700))"
      ],
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<!--\n",
              "  Copyright 2020 Google LLC\n",
              "  Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "  you may not use this file except in compliance with the License.\n",
              "  You may obtain a copy of the License at\n",
              "      https://www.apache.org/licenses/LICENSE-2.0\n",
              "  Unless required by applicable law or agreed to in writing, software\n",
              "  distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "  See the License for the specific language governing permissions and\n",
              "  limitations under the License.\n",
              "-->\n",
              "\n",
              "<!--\n",
              "  A fragment of HTML and Javascript that describes a visualization tool.\n",
              "\n",
              "  This code is expected to be injected into Jupyter or Colaboratory notebooks using the `IPython.display.HTML` function. The tool is rendered using WebGL2.\n",
              "-->\n",
              "\n",
              "<div id='seek'>\n",
              "  <button type='button'\n",
              "          id='pause_play'\n",
              "          style='width:40px; vertical-align:middle;'\n",
              "          onclick=\"toggle_play()\"> ||\n",
              "  </button>\n",
              "  <input type=\"range\"\n",
              "         min=\"0\"\n",
              "         max=\"1\"\n",
              "         value=\"0\"\n",
              "         style=\"width:512px; vertical-align:middle;\"\n",
              "         class=\"slider\"\n",
              "         id=\"frame_range\"\n",
              "         oninput='change_frame(this.value)'>\n",
              "</div>\n",
              "<canvas id=\"canvas\"></canvas>\n",
              "<div id='info'> </div>\n",
              "<div id='error' style=\"color:red\"> </div>\n",
              "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/gl-matrix/2.8.1/gl-matrix-min.js\"></script>\n",
              "\n",
              "<script>\n",
              "  var DIMENSION;\n",
              "\n",
              "  var SIZE;\n",
              "\n",
              "  var SHAPE = {};\n",
              "\n",
              "  var GEOMETRY = {};\n",
              "\n",
              "  var CURRENT_FRAME = 0;\n",
              "  var FRAME_COUNT = 0;\n",
              "  var FRAME_RATE = -1;\n",
              "  var LAST_FRAME_TIME = Date.now() / 1000.0;\n",
              "\n",
              "  var BOX_SIZE;\n",
              "  var READ_BUFFER_SIZE = null;\n",
              "  var IS_LOADED = false;\n",
              "  var SIMULATION_IDX = 0;\n",
              "\n",
              "  // Info\n",
              "\n",
              "  var INFO = ''\n",
              "  var ERROR = ''\n",
              "\n",
              "  // Graphics\n",
              "\n",
              "  var GL;\n",
              "  var SHADER;\n",
              "  var BACKGROUND_COLOR = [0.2, 0.2, 0.2];\n",
              "\n",
              "  // 3D Camera\n",
              "\n",
              "  var EYE = mat4.create();\n",
              "  var PERSPECTIVE = mat4.create();\n",
              "  var LOOK_AT = mat4.create()\n",
              "  var YAW = 0.0;\n",
              "  var PITCH = 0.0;\n",
              "  var CAMERA_POSITION = mat4.create();\n",
              "  var Y_ROTATION_MATRIX = mat4.create();\n",
              "  var X_ROTATION_MATRIX = mat4.create();\n",
              "  var VIEW_DISTANCE = 0.0;\n",
              "\n",
              "  function make_look_at() {\n",
              "    var center = [BOX_SIZE[0] / 2.0, BOX_SIZE[1] / 2.0, BOX_SIZE[2] / 2.0];\n",
              "    var direction = [Math.cos(YAW) * Math.cos(PITCH),\n",
              "                     Math.sin(PITCH),\n",
              "                     Math.sin(YAW) * Math.cos(PITCH)];\n",
              "    var pos = [center[0] - VIEW_DISTANCE * direction[0],\n",
              "               center[1] - VIEW_DISTANCE * direction[1],\n",
              "               center[2] - VIEW_DISTANCE * direction[2]];\n",
              "    mat4.lookAt(LOOK_AT,\n",
              "                pos,\n",
              "                center,\n",
              "                [0.0, 1.0, 0.0]);\n",
              "  }\n",
              "\n",
              "  // 2D Camera\n",
              "\n",
              "  var SCREEN_POSITION = [0, 0];\n",
              "  var CAMERA_SIZE = [0, 0];\n",
              "\n",
              "  // Bonds\n",
              "\n",
              "  const BOND_SEGMENTS = 3;\n",
              "  const VERTICES_PER_BOND = BOND_SEGMENTS * 6;\n",
              "\n",
              "  // Simulation State\n",
              "\n",
              "  var IS_PLAYING = true;\n",
              "  var PLAY_PAUSE_BUTTON = document.getElementById('pause_play');\n",
              "\n",
              "  var FRAME_RANGE = document.getElementById('frame_range');\n",
              "\n",
              "  google.colab.output.setIframeHeight(0, true, {maxHeight: 5000});\n",
              "  var invokeFunction = google.colab.kernel.invokeFunction;\n",
              "\n",
              "  var CANVAS = document.getElementById(\"canvas\");\n",
              "  CANVAS.width = 512;\n",
              "  CANVAS.height = 512;\n",
              "\n",
              "  // Simulation Loading.\n",
              "\n",
              "  function make_sizes() {\n",
              "    return {\n",
              "      position: DIMENSION,\n",
              "      angle: DIMENSION - 1,\n",
              "      size: 1,\n",
              "      color: 3,\n",
              "    };\n",
              "  }\n",
              "\n",
              "  function simulation_info_string() {\n",
              "    return ('<p style=\"color:yellow\">' +\n",
              "            'Simulation Info:</p><div style=\"padding-left: 20px; padding-bottom: 10px;\">' +\n",
              "            'Box Size:    ' + BOX_SIZE.map(x => parseFloat(x).toFixed(2)) + '<br>' +\n",
              "            'Dimension:   ' + DIMENSION + '<br>' +\n",
              "            'Frame Count: ' + FRAME_COUNT + '<br></div>');\n",
              "  }\n",
              "\n",
              "  async function load_simulation() {\n",
              "    console.log(\"Loading simulation.\");\n",
              "\n",
              "    var result = await invokeFunction('GetSimulationMetadata', [], {});\n",
              "    var metadata = from_json(result);\n",
              "\n",
              "    if(metadata.verbose) {\n",
              "      INFO = document.getElementById('info');\n",
              "      ERROR = document.getElementById('error');\n",
              "    }\n",
              "\n",
              "    INFO.innerHTML = 'Loading simulation...<br>';\n",
              "    if(!metadata.box_size) {\n",
              "      ERROR.innerHTML += 'ERROR: No box size specified.<br>';\n",
              "    }\n",
              "\n",
              "    FRAME_COUNT = 1;\n",
              "    BOX_SIZE = metadata.box_size;\n",
              "    DIMENSION = metadata.dimension;\n",
              "    SIMULATION_IDX = metadata.simulation_idx;\n",
              "\n",
              "    if (metadata.frame_count)\n",
              "      FRAME_COUNT = metadata.frame_count;\n",
              "\n",
              "    if (metadata.background_color)\n",
              "      BACKGROUND_COLOR = metadata.background_color;\n",
              "\n",
              "    if (metadata.resolution) {\n",
              "      CANVAS.width = metadata.resolution[0];\n",
              "      CANVAS.height = metadata.resolution[1];\n",
              "    }\n",
              "\n",
              "    if (metadata.frame_rate)\n",
              "      FRAME_RATE = metadata.frame_rate;\n",
              "\n",
              "    const aspect_ratio = CANVAS.width / CANVAS.height;\n",
              "\n",
              "    INFO.innerHTML += simulation_info_string();\n",
              "\n",
              "    SIZE = make_sizes();\n",
              "    initialize_gl();\n",
              "\n",
              "    if (DIMENSION == 2) {\n",
              "      SCREEN_POSITION = [BOX_SIZE[0] / 2.0, BOX_SIZE[1] / 2.0];\n",
              "      CAMERA_SIZE = [aspect_ratio * BOX_SIZE[0] / 2.0, BOX_SIZE[1] / 2.0];\n",
              "    } else if (DIMENSION == 3) {\n",
              "      const fovy = 45.0 / 180.0 * Math.PI;\n",
              "      const max_box_size = Math.max(BOX_SIZE[0], BOX_SIZE[1], BOX_SIZE[2]);\n",
              "      PERSPECTIVE = mat4.perspective(PERSPECTIVE,\n",
              "                                     fovy,            // Field of view.\n",
              "                                     aspect_ratio,    // Aspect ratio.\n",
              "                                     max_box_size / 10.0, // Near clip plane.\n",
              "                                     100 * max_box_size); // Far clip plane.\n",
              "      VIEW_DISTANCE = 2 * max_box_size;\n",
              "      make_look_at();\n",
              "    } else {\n",
              "      ERROR.innerHTML += 'ERROR: Invalid dimension specified: ' + DIMENSION + '.<br>';\n",
              "    }\n",
              "\n",
              "    FRAME_RANGE.max = FRAME_COUNT - 1;\n",
              "\n",
              "    // This specifies the maximum number of frames of data we will try to\n",
              "    // transfer between Python and Javascript at a time.\n",
              "    READ_BUFFER_SIZE = metadata.buffer_size;\n",
              "    if (!READ_BUFFER_SIZE)\n",
              "      READ_BUFFER_SIZE = FRAME_COUNT;\n",
              "\n",
              "    var geometry_list = metadata.geometry;\n",
              "    if (geometry_list) {\n",
              "      for (var i = 0; i < geometry_list.length ; i++) {\n",
              "        const name = geometry_list[i];\n",
              "        GEOMETRY[name] = await load_geometry(name);\n",
              "      }\n",
              "    }\n",
              "\n",
              "    IS_LOADED = true;\n",
              "  }\n",
              "\n",
              "  async function load_geometry(name) {\n",
              "    console.log('Loading ' + name + '.');\n",
              "    INFO.innerHTML += 'Loading geometry \"' + name + '\".<br>';\n",
              "    var result = await invokeFunction('GetGeometryMetadata' + SIMULATION_IDX,\n",
              "                                      [name], {});\n",
              "    var data = from_json(result);\n",
              "\n",
              "    console.log(data);\n",
              "\n",
              "    var geometry = {};\n",
              "    geometry.name = name;\n",
              "    geometry.shape = data.shape;\n",
              "    geometry.count = data.count;\n",
              "    geometry.selected = new Int32Array(data.count);\n",
              "\n",
              "    if (data.reference_geometry)\n",
              "      geometry.reference_geometry = data.reference_geometry;\n",
              "\n",
              "    if (data.max_neighbors)\n",
              "      geometry.max_neighbors = data.max_neighbors;\n",
              "\n",
              "    if(!geometry.shape) {\n",
              "      ERROR.innerHTML += 'ERROR: No shape specified for the geometry.<br>';\n",
              "    }\n",
              "\n",
              "    for (var field in data.fields) {\n",
              "      var array;\n",
              "      var array_type;\n",
              "      if (data.fields[field] == 'dynamic') {\n",
              "        array = await load_dynamic_array(name, field, geometry.count);\n",
              "        array_type = GL.DYNAMIC_DRAW;\n",
              "      } else if (data.fields[field] == 'static') {\n",
              "        array = await load_array(name, field);\n",
              "        array_type = GL.STATIC_DRAW;\n",
              "      } else if (data.fields[field] == 'global') {\n",
              "        array = await load_array(name, field);\n",
              "        array_type = 'GLOBAL';\n",
              "      } else {\n",
              "        ERROR.innerHTML += ('ERROR: field must have type \"dynamic\", \"static\", or ' +\n",
              "                            '\"global\". Found' + data.fields[field] + '.<br>');\n",
              "      }\n",
              "\n",
              "      geometry[field] = array;\n",
              "      geometry[field + '_type'] = array_type;\n",
              "\n",
              "      if (data.shape == 'Bond' && field == 'neighbor_idx')\n",
              "        continue;\n",
              "\n",
              "      if (array_type != 'GLOBAL') {\n",
              "        var array_buffer = GL.createBuffer();\n",
              "        var array_buffer_size = 4 * SIZE[field] * geometry.count;\n",
              "        GL.bindBuffer(GL.ARRAY_BUFFER, array_buffer);\n",
              "        GL.bufferData(GL.ARRAY_BUFFER, array, array_type);\n",
              "        geometry[field + '_buffer'] = array_buffer;\n",
              "        geometry[field + '_buffer_size'] = array_buffer_size;\n",
              "      }\n",
              "    }\n",
              "\n",
              "    if (data.shape == 'Bond') {\n",
              "      var vertex_buffer = GL.createBuffer();\n",
              "      var vertex_count = (geometry.count *\n",
              "                          geometry.max_neighbors *\n",
              "                          VERTICES_PER_BOND);\n",
              "      var vertex_buffer_size = 4 * SIZE['position'] * vertex_count;\n",
              "      GL.bindBuffer(GL.ARRAY_BUFFER, vertex_buffer);\n",
              "      GL.bufferData(GL.ARRAY_BUFFER, vertex_buffer_size, GL.DYNAMIC_DRAW);\n",
              "\n",
              "      geometry.vertices = new Float32Array(SIZE['position'] * vertex_count);\n",
              "      geometry.vertex_buffer = vertex_buffer;\n",
              "      geometry.vertex_buffer_size = vertex_buffer_size;\n",
              "\n",
              "      var vertex_normal_buffer = GL.createBuffer();\n",
              "      GL.bindBuffer(GL.ARRAY_BUFFER, vertex_normal_buffer);\n",
              "      GL.bufferData(GL.ARRAY_BUFFER, vertex_buffer_size, GL.DYNAMIC_DRAW);\n",
              "\n",
              "      geometry.normals = new Float32Array(SIZE['position'] * vertex_count);\n",
              "      geometry.vertex_normal_buffer = vertex_normal_buffer;\n",
              "    }\n",
              "\n",
              "    return geometry;\n",
              "  }\n",
              "\n",
              "  async function load_dynamic_array(name, field, count) {\n",
              "    if (!FRAME_COUNT) {\n",
              "      ERROR.innerHTML += 'ERROR: No frame count specified.<br>';\n",
              "    }\n",
              "\n",
              "    var array = new Float32Array(FRAME_COUNT * count * SIZE[field]);\n",
              "\n",
              "    const info_text = INFO.innerHTML;\n",
              "\n",
              "    for (var i = 0 ; i < FRAME_COUNT ; i += READ_BUFFER_SIZE) {\n",
              "      await load_array_chunk(name, field, count, array, i, info_text);\n",
              "    }\n",
              "\n",
              "    INFO.innerHTML = info_text + 'Loaded \"' + field + '\".<br>';\n",
              "\n",
              "    return array;\n",
              "  }\n",
              "\n",
              "  async function load_array_chunk(name, field, count, array, offset, info_text) {\n",
              "    var dbg_string = ('Loading \"' + field + '\" chunk at time offset ' + offset +\n",
              "                      '.<br>');\n",
              "    console.log(dbg_string);\n",
              "    INFO.innerHTML = info_text + dbg_string + '<br>';\n",
              "\n",
              "    var result = await invokeFunction('GetArrayChunk' + SIMULATION_IDX,\n",
              "                                      [name, field, offset, READ_BUFFER_SIZE],\n",
              "                                      {});\n",
              "    var data = from_json(result);\n",
              "\n",
              "    if (!data.array_chunk) {\n",
              "      // Error checking.\n",
              "    }\n",
              "\n",
              "    var array_chunk = decode(data.array_chunk);\n",
              "    array.set(array_chunk, offset * count * SIZE[field]);\n",
              "  }\n",
              "\n",
              "  async function load_array(name, field) {\n",
              "    const info_text = INFO.innerHTML;\n",
              "    INFO.innerHTML += 'Loading \"' + field + '\".<br>';\n",
              "    var result = await invokeFunction('GetArray' + SIMULATION_IDX,\n",
              "                                      [name, field], {});\n",
              "    var data = from_json(result);\n",
              "\n",
              "    if (!data.array) {\n",
              "      ERROR.innerHTML += 'ERROR: No data array specified.<br>';\n",
              "    }\n",
              "    INFO.innerHTML = info_text + 'Loaded \"' + field + '\".<br>';\n",
              "    return decode(data.array);\n",
              "  }\n",
              "\n",
              "  function initialize_gl() {\n",
              "    GL = CANVAS.getContext(\"webgl2\");\n",
              "\n",
              "    if (!GL) {\n",
              "        alert('Unable to initialize WebGL.');\n",
              "        return;\n",
              "    }\n",
              "\n",
              "    GL.viewport(0, 0, GL.drawingBufferWidth, GL.drawingBufferHeight);\n",
              "\n",
              "    if (BACKGROUND_COLOR)\n",
              "      GL.clearColor(BACKGROUND_COLOR[0],\n",
              "                    BACKGROUND_COLOR[1],\n",
              "                    BACKGROUND_COLOR[2],\n",
              "                    1.0);\n",
              "    else\n",
              "      GL.clearColor(0.2, 0.2, 0.2, 1.0);\n",
              "    GL.enable(GL.DEPTH_TEST);\n",
              "\n",
              "    var shader_program;\n",
              "    if (DIMENSION == 2)\n",
              "      shader_program = initialize_shader(\n",
              "          GL, VERTEX_SHADER_SOURCE_2D, FRAGMENT_SHADER_SOURCE_2D);\n",
              "    else if (DIMENSION == 3)\n",
              "      shader_program = initialize_shader(\n",
              "          GL, VERTEX_SHADER_SOURCE_3D, FRAGMENT_SHADER_SOURCE_3D);\n",
              "\n",
              "    SHADER = {\n",
              "      program: shader_program,\n",
              "      attribute: {\n",
              "          vertex_position: GL.getAttribLocation(shader_program, 'vertex_position'),\n",
              "          position: GL.getAttribLocation(shader_program, 'position'),\n",
              "          size: GL.getAttribLocation(shader_program, 'size'),\n",
              "          color: GL.getAttribLocation(shader_program, 'color'),\n",
              "      },\n",
              "      uniform: {\n",
              "          color: GL.getUniformLocation(shader_program, 'color'),\n",
              "          global_size: GL.getUniformLocation(shader_program, 'global_size'),\n",
              "          use_global_size: GL.getUniformLocation(shader_program, 'use_global_size'),\n",
              "          global_color: GL.getUniformLocation(shader_program, 'global_color'),\n",
              "          use_global_color: GL.getUniformLocation(shader_program, 'use_global_color'),\n",
              "          use_position: GL.getUniformLocation(shader_program, 'use_position')\n",
              "      },\n",
              "    };\n",
              "\n",
              "    if (DIMENSION == 2) {\n",
              "      SHADER.uniform['screen_position'] = GL.getUniformLocation(shader_program, 'screen_position');\n",
              "      SHADER.uniform['screen_size'] = GL.getUniformLocation(shader_program, 'screen_size');\n",
              "    } else if (DIMENSION == 3) {\n",
              "      SHADER.attribute['vertex_normal'] = GL.getAttribLocation(shader_program, 'vertex_normal');\n",
              "      SHADER.uniform['perspective'] = GL.getUniformLocation(shader_program, 'perspective');\n",
              "      SHADER.uniform['light_direction'] = GL.getUniformLocation(shader_program, 'light_direction');\n",
              "    }\n",
              "\n",
              "    GL.useProgram(shader_program);\n",
              "\n",
              "    GL.uniform4f(SHADER.uniform.color, 0.9, 0.9, 1.0, 1.0);\n",
              "    GL.uniform1f(SHADER.uniform.global_size, 1.0);\n",
              "    GL.uniform1i(SHADER.uniform.use_global_size, true);\n",
              "\n",
              "    GL.uniform3f(SHADER.uniform.global_color, 1.0, 1.0, 1.0);\n",
              "    GL.uniform1i(SHADER.uniform.use_global_color, true);\n",
              "    GL.uniform1f(SHADER.uniform.use_position, 1.0);\n",
              "\n",
              "    var inorm = 1.0 / Math.sqrt(3);\n",
              "    GL.uniform3f(SHADER.uniform.light_direction, inorm, -inorm, inorm)\n",
              "\n",
              "    SHAPE['Disk'] = make_disk(GL, SHADER, 16, 0.5);\n",
              "    SHAPE['Sphere'] = make_sphere(GL, SHADER, 16, 16, 0.5);\n",
              "\n",
              "    const vao = GL.createVertexArray();\n",
              "    GL.bindVertexArray(vao);\n",
              "  }\n",
              "\n",
              "  function make_disk(gl, shader, segments, radius) {\n",
              "    var position = new Float32Array(segments * DIMENSION * 3);\n",
              "    for (var s = 0 ; s < segments ; s++) {\n",
              "        const th = 2 * s / segments * Math.PI;\n",
              "        const th_p = 2 * (s + 1) / segments * Math.PI;\n",
              "        position.set([0.0, 0.0], s * 3 * DIMENSION);\n",
              "        position.set([radius * Math.cos(th), radius * Math.sin(th)],\n",
              "                     s * 3 * DIMENSION + DIMENSION);\n",
              "        position.set([radius * Math.cos(th_p), radius * Math.sin(th_p)],\n",
              "                     s * 3 * DIMENSION + 2 * DIMENSION);\n",
              "    }\n",
              "\n",
              "    var buffer = gl.createBuffer();\n",
              "    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n",
              "    gl.bufferData(gl.ARRAY_BUFFER, position, gl.STATIC_DRAW);\n",
              "\n",
              "    return {\n",
              "      vertex_position: position,\n",
              "      vertex_buffer: buffer,\n",
              "      vertex_count: segments * 3,\n",
              "    };\n",
              "  }\n",
              "\n",
              "  function make_sphere(gl, shader, horizontal_segments, vertical_segments, radius) {\n",
              "    const stride = DIMENSION * 3 * 2;  // 3 vertices per tri, two tris per quad.\n",
              "    if (DIMENSION != 3) {\n",
              "      return null;\n",
              "      // Error Checking.\n",
              "    }\n",
              "\n",
              "    var position = new Float32Array(vertical_segments * horizontal_segments * stride);\n",
              "    var normal = new Float32Array(vertical_segments * horizontal_segments * stride);\n",
              "\n",
              "    var dtheta = 2 * Math.PI / horizontal_segments;\n",
              "    var dphi = Math.PI / vertical_segments;\n",
              "\n",
              "    for (var vs = 0 ; vs < vertical_segments ; vs++) {\n",
              "      const phi_0 = vs * dphi;\n",
              "      const phi_1 = (vs + 1) * dphi;\n",
              "      const offset = vs * horizontal_segments * stride;\n",
              "      for (var hs = 0 ; hs < horizontal_segments ; hs++) {\n",
              "        const theta_0 = hs * dtheta;\n",
              "        const theta_1 = (hs + 1) * dtheta;\n",
              "\n",
              "        const x0 = radius * Math.sin(phi_0) * Math.cos(theta_0);\n",
              "        const y0 = radius * Math.sin(phi_0) * Math.sin(theta_0);\n",
              "        const z0 = radius * Math.cos(phi_0);\n",
              "\n",
              "        const x1 = radius * Math.sin(phi_1) * Math.cos(theta_0);\n",
              "        const y1 = radius * Math.sin(phi_1) * Math.sin(theta_0);\n",
              "        const z1 = radius * Math.cos(phi_1);\n",
              "\n",
              "        const x2 = radius * Math.sin(phi_0) * Math.cos(theta_1);\n",
              "        const y2 = radius * Math.sin(phi_0) * Math.sin(theta_1);\n",
              "        const z2 = radius * Math.cos(phi_0);\n",
              "\n",
              "        const x3 = radius * Math.sin(phi_1) * Math.cos(theta_1);\n",
              "        const y3 = radius * Math.sin(phi_1) * Math.sin(theta_1);\n",
              "        const z3 = radius * Math.cos(phi_1);\n",
              "\n",
              "        position.set([x0, y0, z0,\n",
              "                      x1, y1, z1,\n",
              "                      x2, y2, z2,\n",
              "                      x1, y1, z1,\n",
              "                      x3, y3, z3,\n",
              "                      x2, y2, z2], offset + hs * stride);\n",
              "\n",
              "        normal.set([x0 / radius, y0 / radius, z0 / radius,\n",
              "                    x1 / radius, y1 / radius, z1 / radius,\n",
              "                    x2 / radius, y2 / radius, z2 / radius,\n",
              "                    x1 / radius, y1 / radius, z1 / radius,\n",
              "                    x3 / radius, y3 / radius, z3 / radius,\n",
              "                    x2 / radius, y2 / radius, z2 / radius], offset + hs * stride);\n",
              "      }\n",
              "    }\n",
              "\n",
              "    var buffer = gl.createBuffer();\n",
              "    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n",
              "    gl.bufferData(gl.ARRAY_BUFFER, position, gl.STATIC_DRAW);\n",
              "\n",
              "    var normal_buffer = gl.createBuffer();\n",
              "    gl.bindBuffer(gl.ARRAY_BUFFER, normal_buffer);\n",
              "    gl.bufferData(gl.ARRAY_BUFFER, normal, gl.STATIC_DRAW);\n",
              "\n",
              "    return {\n",
              "      vertex_position: position,\n",
              "      vertex_buffer: buffer,\n",
              "      vertex_normals: normal,\n",
              "      vertex_normal_buffer: normal_buffer,\n",
              "      vertex_count: vertical_segments * horizontal_segments * 3 * 2\n",
              "    };\n",
              "  }\n",
              "\n",
              "  function set_attribute(geometry, name) {\n",
              "    if (!geometry[name]) {\n",
              "      if (SIZE[name] == 1)\n",
              "        GL.uniform1f(SHADER.uniform['global_' + name], 1.0);\n",
              "      else if (SIZE[name] == 2)\n",
              "        GL.uniform2f(SHADER.uniform['global_' + name], 1.0, 1.0);\n",
              "      else if (SIZE[name] == 3)\n",
              "        GL.uniform3f(SHADER.uniform['global_' + name], 1.0, 1.0, 1.0);\n",
              "\n",
              "      GL.uniform1i(SHADER.uniform['use_global_' + name], true);\n",
              "    } else if (geometry[name + '_type'] == 'GLOBAL') {\n",
              "      if (SIZE[name] == 1)\n",
              "        GL.uniform1fv(SHADER.uniform['global_' + name], geometry[name]);\n",
              "      else if (SIZE[name] == 2)\n",
              "        GL.uniform2fv(SHADER.uniform['global_' + name], geometry[name]);\n",
              "      else if (SIZE[name] == 3)\n",
              "        GL.uniform3fv(SHADER.uniform['global_' + name], geometry[name]);\n",
              "\n",
              "      GL.uniform1i(SHADER.uniform['use_global_' + name], true);\n",
              "    } else {\n",
              "      GL.enableVertexAttribArray(SHADER.attribute[name]);\n",
              "      var stride = SIZE[name] * geometry.count;\n",
              "      GL.bindBuffer(GL.ARRAY_BUFFER, geometry[name + '_buffer']);\n",
              "      if (geometry[name + '_type'] == GL.DYNAMIC_DRAW) {\n",
              "        const data = geometry[name].slice(CURRENT_FRAME * stride,\n",
              "                                          (CURRENT_FRAME + 1) * stride);\n",
              "        GL.bufferSubData(GL.ARRAY_BUFFER, 0, data);\n",
              "      }\n",
              "      GL.vertexAttribPointer(\n",
              "        SHADER.attribute[name],\n",
              "        SIZE[name],\n",
              "        GL.FLOAT,\n",
              "        false,\n",
              "        0,\n",
              "        0\n",
              "      );\n",
              "      GL.vertexAttribDivisor(SHADER.attribute[name], 1);\n",
              "\n",
              "      GL.uniform1i(SHADER.uniform['use_global_' + name], false);\n",
              "    }\n",
              "  }\n",
              "\n",
              "  var loops = 0;\n",
              "\n",
              "  function update_frame() {\n",
              "    if(!GL) {\n",
              "      window.requestAnimationFrame(update_frame);\n",
              "      return;\n",
              "    }\n",
              "\n",
              "    var cur_time = Date.now() / 1000.0;\n",
              "    if (FRAME_RATE > 0 && cur_time - LAST_FRAME_TIME < 1.0 / FRAME_RATE) {\n",
              "      window.requestAnimationFrame(update_frame);\n",
              "      return;\n",
              "    }\n",
              "    LAST_FRAME_TIME = cur_time;\n",
              "\n",
              "    GL.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n",
              "\n",
              "    if (!IS_LOADED) {\n",
              "      window.requestAnimationFrame(update_frame);\n",
              "      return;\n",
              "    }\n",
              "\n",
              "    if (DIMENSION == 2) {\n",
              "      var camera_x = SCREEN_POSITION[0];\n",
              "      var camera_y = SCREEN_POSITION[1];\n",
              "\n",
              "      if (DRAGGING) {\n",
              "        const delta = get_drag_offset();\n",
              "        camera_x += delta[0];\n",
              "        camera_y += delta[1];\n",
              "      }\n",
              "      GL.uniform2f(SHADER.uniform.screen_position, camera_x, camera_y);\n",
              "      GL.uniform2f(SHADER.uniform.screen_size, CAMERA_SIZE[0], CAMERA_SIZE[1]);\n",
              "    } else if (DIMENSION == 3) {\n",
              "\n",
              "      // Now these are some janky globals.\n",
              "      if (DRAGGING) {\n",
              "        var yaw = YAW;\n",
              "        var pitch = PITCH;\n",
              "        const delta = get_drag_offset();\n",
              "        YAW = YAW - delta[0];\n",
              "        PITCH = PITCH - delta[1];\n",
              "        make_look_at();\n",
              "        YAW = yaw;\n",
              "        PITCH = pitch;\n",
              "      }\n",
              "\n",
              "      GL.uniformMatrix4fv(SHADER.uniform.perspective, false,\n",
              "                          mat4.multiply(EYE, PERSPECTIVE, LOOK_AT));\n",
              "    }\n",
              "\n",
              "    if (CURRENT_FRAME > FRAME_COUNT - 1) {\n",
              "      loops++;\n",
              "      CURRENT_FRAME = 0;\n",
              "    }\n",
              "\n",
              "    for (var name in GEOMETRY) {\n",
              "      var geom = GEOMETRY[name];\n",
              "\n",
              "      set_attribute(geom, 'size');\n",
              "      set_attribute(geom, 'color');\n",
              "\n",
              "      var shape = geom.shape;\n",
              "      var vertex_buffer;\n",
              "      var vertex_count;\n",
              "      var vertex_normal_buffer = null;\n",
              "\n",
              "      if (shape != 'Bond') {\n",
              "        shape = SHAPE[shape];\n",
              "\n",
              "        update_shape(geom);\n",
              "\n",
              "        vertex_buffer = shape.vertex_buffer;\n",
              "        vertex_count = shape.vertex_count;\n",
              "        vertex_normal_buffer = shape.vertex_normal_buffer;\n",
              "      } else {\n",
              "        vertex_count = update_bond_vertex_data(GEOMETRY[geom.reference_geometry],\n",
              "                                               geom);\n",
              "        vertex_buffer = geom.vertex_buffer;\n",
              "        vertex_normal_buffer = geom.vertex_normal_buffer;\n",
              "      }\n",
              "\n",
              "      GL.enableVertexAttribArray(SHADER.attribute.vertex_position);\n",
              "      GL.bindBuffer(GL.ARRAY_BUFFER, vertex_buffer);\n",
              "      GL.vertexAttribPointer(\n",
              "        SHADER.attribute.vertex_position,\n",
              "        DIMENSION,\n",
              "        GL.FLOAT,\n",
              "        false,\n",
              "        0,\n",
              "        0\n",
              "      );\n",
              "\n",
              "      if (DIMENSION == 3 && vertex_normal_buffer) {\n",
              "        GL.enableVertexAttribArray(SHADER.attribute.vertex_normal);\n",
              "        GL.bindBuffer(GL.ARRAY_BUFFER, vertex_normal_buffer);\n",
              "        GL.vertexAttribPointer(\n",
              "          SHADER.attribute.vertex_normal,\n",
              "          DIMENSION,\n",
              "          GL.FLOAT,\n",
              "          false,\n",
              "          0,\n",
              "          0\n",
              "        );\n",
              "      }\n",
              "\n",
              "      if (shape == 'Bond')\n",
              "      {\n",
              "        GL.drawArrays(GL.TRIANGLES, 0, vertex_count);\n",
              "      } else {\n",
              "        GL.drawArraysInstanced(GL.TRIANGLES, 0, vertex_count, geom.count);\n",
              "      }\n",
              "    }\n",
              "\n",
              "    if(IS_PLAYING) {\n",
              "      CURRENT_FRAME++;\n",
              "      FRAME_RANGE.value = CURRENT_FRAME;\n",
              "    }\n",
              "\n",
              "    window.requestAnimationFrame(update_frame);\n",
              "  }\n",
              "\n",
              "  function update_shape(geometry) {\n",
              "    GL.enableVertexAttribArray(SHADER.attribute.position);\n",
              "    var stride = geometry.count * DIMENSION;\n",
              "    GL.bindBuffer(GL.ARRAY_BUFFER, geometry.position_buffer);\n",
              "    if (geometry.position_type == GL.DYNAMIC_DRAW) {\n",
              "      const positions = geometry.position.subarray(CURRENT_FRAME * stride,\n",
              "                                                   (CURRENT_FRAME + 1) * stride);\n",
              "      GL.bufferSubData(GL.ARRAY_BUFFER, 0, positions);\n",
              "    }\n",
              "    GL.vertexAttribPointer(\n",
              "      SHADER.attribute.position,\n",
              "      DIMENSION,\n",
              "      GL.FLOAT,\n",
              "      false,\n",
              "      0,\n",
              "      0\n",
              "    );\n",
              "    GL.vertexAttribDivisor(SHADER.attribute.position, 1);\n",
              "    GL.uniform1f(SHADER.uniform.use_position, 1.0);\n",
              "  }\n",
              "\n",
              "  function update_bond_vertex_data(reference_geometry, bonds) {\n",
              "    const geom = reference_geometry;\n",
              "    const N = geom.count;\n",
              "    var stride = N * DIMENSION;\n",
              "    const positions = geom.position.subarray(CURRENT_FRAME * stride,\n",
              "                                             (CURRENT_FRAME + 1) * stride);\n",
              "    const neighbors = bonds.max_neighbors;\n",
              "\n",
              "    var vertex_count = 0;\n",
              "    var vertices = bonds.vertices;\n",
              "    var normals = bonds.normals;\n",
              "\n",
              "    for (var i = 0 ; i < N ; i++) {\n",
              "      var r_i = positions.subarray(i * DIMENSION, (i + 1) * DIMENSION);\n",
              "      for (var j = 0 ; j < neighbors ; j++) {\n",
              "        const idx = i * neighbors + j;\n",
              "        const nbr_idx = Math.round(bonds.neighbor_idx[idx]);\n",
              "\n",
              "        if (nbr_idx < i) {\n",
              "          var r_j = positions.subarray(nbr_idx * DIMENSION, (nbr_idx + 1) * DIMENSION);\n",
              "          vertex_count = push_bond(vertices, normals, vertex_count, r_i, r_j, bonds.diameter[0] / 2.0);\n",
              "        }\n",
              "      }\n",
              "    }\n",
              "\n",
              "    GL.bindBuffer(GL.ARRAY_BUFFER, bonds.vertex_buffer);\n",
              "    GL.bufferData(GL.ARRAY_BUFFER, vertices, GL.DYNAMIC_DRAW);\n",
              "\n",
              "    GL.bindBuffer(GL.ARRAY_BUFFER, bonds.vertex_normal_buffer);\n",
              "    GL.bufferData(GL.ARRAY_BUFFER, normals, GL.DYNAMIC_DRAW);\n",
              "\n",
              "    GL.uniform1f(SHADER.uniform.use_position, 0.0);\n",
              "    GL.uniform1i(SHADER.uniform.use_global_size, 1);\n",
              "    GL.uniform1i(SHADER.uniform.use_global_color, 1);\n",
              "\n",
              "    return vertex_count;\n",
              "  }\n",
              "\n",
              "  BOND_C_TABLE = [];\n",
              "  BOND_S_TABLE = [];\n",
              "  for (var i = 0 ; i < BOND_SEGMENTS ; i++)\n",
              "  {\n",
              "    BOND_C_TABLE.push(Math.cos(2 * i * Math.PI / BOND_SEGMENTS));\n",
              "    BOND_S_TABLE.push(Math.sin(2 * i * Math.PI / BOND_SEGMENTS));\n",
              "  }\n",
              "\n",
              "  function push_bond(vertices, normals, vertex_count, r_i, r_j, radius) {\n",
              "    var dr = vec3.fromValues(r_i[0] - r_j[0],\n",
              "                             r_i[1] - r_j[1],\n",
              "                             r_i[2] - r_j[2]);\n",
              "\n",
              "    if (Math.abs(dr[0]) > BOX_SIZE[0] / 2.0 ||\n",
              "        Math.abs(dr[1]) > BOX_SIZE[1] / 2.0 ||\n",
              "        Math.abs(dr[2]) > BOX_SIZE[2] / 2.0)\n",
              "      return vertex_count;\n",
              "\n",
              "    var up = vec3.fromValues(0.0, 1.0, 0.0);\n",
              "    var left = vec3.fromValues(0.0, 1.0, 0.0);\n",
              "\n",
              "    vec3.cross(left, up, dr);\n",
              "    vec3.normalize(left, left);\n",
              "\n",
              "    vec3.cross(up, left, dr);\n",
              "    vec3.normalize(up, up);\n",
              "\n",
              "    var normal = vec3.fromValues(0.0, 0.0, 0.0);\n",
              "\n",
              "    for (var i = 0 ; i < BOND_SEGMENTS ; i++) {\n",
              "      const c1 = radius * BOND_C_TABLE[i];\n",
              "      const c2 = radius * BOND_C_TABLE[(i + 1) % BOND_SEGMENTS];\n",
              "      const s1 = radius * BOND_S_TABLE[i];\n",
              "      const s2 = radius * BOND_S_TABLE[(i + 1) % BOND_SEGMENTS];\n",
              "\n",
              "      vertices.set([\n",
              "        r_j[0] + left[0] * c1 + up[0] * s1,\n",
              "        r_j[1] + left[1] * c1 + up[1] * s1,\n",
              "        r_j[2] + left[2] * c1 + up[2] * s1,\n",
              "\n",
              "        r_i[0] + left[0] * c1 + up[0] * s1,\n",
              "        r_i[1] + left[1] * c1 + up[1] * s1,\n",
              "        r_i[2] + left[2] * c1 + up[2] * s1,\n",
              "\n",
              "        r_j[0] + left[0] * c2 + up[0] * s2,\n",
              "        r_j[1] + left[1] * c2 + up[1] * s2,\n",
              "        r_j[2] + left[2] * c2 + up[2] * s2,\n",
              "\n",
              "        r_i[0] + left[0] * c1 + up[0] * s1,\n",
              "        r_i[1] + left[1] * c1 + up[1] * s1,\n",
              "        r_i[2] + left[2] * c1 + up[2] * s1,\n",
              "\n",
              "        r_i[0] + left[0] * c2 + up[0] * s2,\n",
              "        r_i[1] + left[1] * c2 + up[1] * s2,\n",
              "        r_i[2] + left[2] * c2 + up[2] * s2,\n",
              "\n",
              "        r_j[0] + left[0] * c2 + up[0] * s2,\n",
              "        r_j[1] + left[1] * c2 + up[1] * s2,\n",
              "        r_j[2] + left[2] * c2 + up[2] * s2,\n",
              "      ], 3 * (vertex_count + 6 * i));\n",
              "\n",
              "      vec3.cross(normal,\n",
              "                 [r_j[0] - r_i[0] + left[0] * c1 + up[0] * s1,\n",
              "                  r_j[1] - r_i[1] + left[1] * c1 + up[1] * s1,\n",
              "                  r_j[2] - r_i[2] + left[2] * c1 + up[2] * s1],\n",
              "                 [left[0] * (c1 - c2) + up[0] * (s1 - s2),\n",
              "                  left[1] * (c1 - c2) + up[1] * (s1 - s2),\n",
              "                  left[2] * (c1 - c2) + up[2] * (s1 - s2)]);\n",
              "      vec3.normalize(normal, normal);\n",
              "\n",
              "      normals.set([\n",
              "        normal[0], normal[1], normal[2],\n",
              "        normal[0], normal[1], normal[2],\n",
              "        normal[0], normal[1], normal[2],\n",
              "        normal[0], normal[1], normal[2],\n",
              "        normal[0], normal[1], normal[2],\n",
              "        normal[0], normal[1], normal[2],\n",
              "      ], 3 * (vertex_count + 6 * i));\n",
              "    }\n",
              "    return vertex_count + 6 * BOND_SEGMENTS;\n",
              "  }\n",
              "\n",
              "  // SHADER CODE\n",
              "\n",
              "  const VERTEX_SHADER_SOURCE_2D = `#version 300 es\n",
              "    // Vertex Shader Program.\n",
              "    in vec2 vertex_position;\n",
              "    in vec2 position;\n",
              "    in float size;\n",
              "    in vec3 color;\n",
              "\n",
              "    out vec4 v_color;\n",
              "\n",
              "    uniform float use_position;\n",
              "\n",
              "    uniform vec2 screen_position;\n",
              "    uniform vec2 screen_size;\n",
              "\n",
              "    uniform float global_size;\n",
              "    uniform bool use_global_size;\n",
              "\n",
              "    uniform vec3 global_color;\n",
              "    uniform bool use_global_color;\n",
              "\n",
              "    void main() {\n",
              "      float _size = use_global_size ? global_size : size;\n",
              "      vec2 v = (_size * vertex_position + position - screen_position) / screen_size;\n",
              "      gl_Position = vec4(v, 0.0, 1.0);\n",
              "      v_color = vec4(use_global_color ? global_color : color, 1.0f);\n",
              "    }\n",
              "  `;\n",
              "\n",
              "  const FRAGMENT_SHADER_SOURCE_2D = `#version 300 es\n",
              "    precision mediump float;\n",
              "\n",
              "    in vec4 v_color;\n",
              "\n",
              "    out vec4 outColor;\n",
              "\n",
              "    void main() {\n",
              "      outColor = v_color;\n",
              "    }\n",
              "  `;\n",
              "\n",
              "   const VERTEX_SHADER_SOURCE_3D = `#version 300 es\n",
              "    // Vertex Shader Program.\n",
              "    in vec3 vertex_position;\n",
              "    in vec3 vertex_normal;\n",
              "\n",
              "    in vec3 position;\n",
              "    in float size;\n",
              "    in vec3 color;\n",
              "\n",
              "    out vec4 v_color;\n",
              "    out vec3 v_normal;\n",
              "\n",
              "    uniform mat4 perspective;\n",
              "\n",
              "    uniform float use_position;\n",
              "\n",
              "    uniform float global_size;\n",
              "    uniform bool use_global_size;\n",
              "\n",
              "    uniform vec3 global_color;\n",
              "    uniform bool use_global_color;\n",
              "\n",
              "    void main() {\n",
              "      vec3 pos = use_position * position;\n",
              "      float _size = use_global_size ? global_size : size;\n",
              "\n",
              "      vec3 v = (_size * vertex_position + pos);\n",
              "      gl_Position = perspective * vec4(v, 1.0);\n",
              "\n",
              "      v_color = vec4(use_global_color ? global_color : color, 1.0f);\n",
              "      v_normal = vertex_normal;\n",
              "    }\n",
              "  `;\n",
              "\n",
              "  const FRAGMENT_SHADER_SOURCE_3D = `#version 300 es\n",
              "    precision mediump float;\n",
              "\n",
              "    in vec4 v_color;\n",
              "    in vec3 v_normal;\n",
              "\n",
              "    uniform vec3 light_direction;\n",
              "\n",
              "    out vec4 outColor;\n",
              "\n",
              "    void main() {\n",
              "      float diffuse_magnitude = clamp(-dot(v_normal, light_direction), 0.0, 1.0) + 0.2;\n",
              "\n",
              "      outColor = vec4(vec3(v_color) * diffuse_magnitude, v_color.a);\n",
              "    }\n",
              "  `;\n",
              "\n",
              "  function initialize_shader(gl, vertex_shader_source, fragment_shader_source) {\n",
              "\n",
              "    const vertex_shader = compile_shader(\n",
              "      gl, gl.VERTEX_SHADER, vertex_shader_source);\n",
              "    const fragment_shader = compile_shader(\n",
              "      gl, gl.FRAGMENT_SHADER, fragment_shader_source);\n",
              "\n",
              "    const shader_program = gl.createProgram();\n",
              "    gl.attachShader(shader_program, vertex_shader);\n",
              "    gl.attachShader(shader_program, fragment_shader);\n",
              "    gl.linkProgram(shader_program);\n",
              "\n",
              "    if (!gl.getProgramParameter(shader_program, gl.LINK_STATUS)) {\n",
              "      alert(\n",
              "        'Unable to initialize shader program: ' +\n",
              "        gl.getProgramInfoLog(shader_program)\n",
              "        );\n",
              "        return null;\n",
              "    }\n",
              "    return shader_program;\n",
              "  }\n",
              "\n",
              "  function compile_shader(gl, type, source) {\n",
              "    const shader = gl.createShader(type);\n",
              "    gl.shaderSource(shader, source);\n",
              "    gl.compileShader(shader);\n",
              "\n",
              "    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n",
              "      alert('An error occured compiling shader: ' + gl.getShaderInfoLog(shader));\n",
              "      gl.deleteShader(shader);\n",
              "      return null;\n",
              "    }\n",
              "\n",
              "    return shader;\n",
              "  }\n",
              "\n",
              "  // UI\n",
              "\n",
              "  var DRAG_START;\n",
              "  var DRAG_CURRENT;\n",
              "  var DRAGGING = false;\n",
              "\n",
              "  CANVAS.addEventListener('mousedown', function(e) {\n",
              "    DRAG_START = [e.offsetX, e.offsetY];\n",
              "    DRAGGING = true;\n",
              "  });\n",
              "\n",
              "  CANVAS.addEventListener('mousemove', function(e) {\n",
              "    DRAG_CURRENT = [e.offsetX, e.offsetY];\n",
              "  });\n",
              "\n",
              "  CANVAS.addEventListener('mouseup', function(e) {\n",
              "    const delta = get_drag_offset();\n",
              "    if (DIMENSION == 2) {\n",
              "      SCREEN_POSITION = [SCREEN_POSITION[0] + delta[0],\n",
              "                         SCREEN_POSITION[1] + delta[1]];\n",
              "    } else if (DIMENSION == 3) {\n",
              "      YAW -= delta[0];\n",
              "      PITCH -= delta[1];\n",
              "\n",
              "      if (PITCH > Math.PI / 2.1)\n",
              "        PITCH = Math.PI / 2.1;\n",
              "      if (PITCH < -Math.PI / 2.1)\n",
              "        PITCH = -Math.PI / 2.1;\n",
              "\n",
              "      make_look_at();\n",
              "    }\n",
              "\n",
              "    DRAGGING = false;\n",
              "  });\n",
              "\n",
              "  function toggle_play() {\n",
              "    IS_PLAYING = !IS_PLAYING;\n",
              "    console.log(PLAY_PAUSE_BUTTON);\n",
              "    if(IS_PLAYING)\n",
              "      PLAY_PAUSE_BUTTON.innerHTML = '||';\n",
              "    else\n",
              "      PLAY_PAUSE_BUTTON.innerHTML = '>';\n",
              "  }\n",
              "\n",
              "  function change_frame(value) {\n",
              "    if (!IS_LOADED)\n",
              "      return;\n",
              "    CURRENT_FRAME = value;\n",
              "    FRAME_RANGE.innerHTML = value;\n",
              "  }\n",
              "\n",
              "  function get_drag_offset() {\n",
              "    var delta = [DRAG_START[0] - DRAG_CURRENT[0],\n",
              "                 -DRAG_START[1] + DRAG_CURRENT[1]];\n",
              "    delta = [delta[0] / canvas.width * 2, delta[1] / canvas.height * 2];\n",
              "    if (DIMENSION == 2) {\n",
              "      delta = [delta[0] * CAMERA_SIZE[0],\n",
              "               delta[1] * CAMERA_SIZE[1]];\n",
              "    }\n",
              "    return delta;\n",
              "  }\n",
              "\n",
              "  const SCALE_SPEED = 0.1;\n",
              "  CANVAS.addEventListener('mousewheel', function(e) {\n",
              "    var delta = Math.sign(e.wheelDeltaY);\n",
              "    if (navigator.appVersion.indexOf('Mac'))\n",
              "      delta *= -0.1;\n",
              "    if (DIMENSION == 2) {\n",
              "      CAMERA_SIZE[0] = CAMERA_SIZE[0] * (1 + delta * SCALE_SPEED);\n",
              "      CAMERA_SIZE[1] = CAMERA_SIZE[1] * (1 + delta * SCALE_SPEED);\n",
              "    } else if (DIMENSION == 3) {\n",
              "      VIEW_DISTANCE = VIEW_DISTANCE * (1 + delta * SCALE_SPEED);\n",
              "      make_look_at();\n",
              "    }\n",
              "    e.preventDefault();\n",
              "  }, false);\n",
              "  CANVAS.addEventListener('DOMMouseScroll', function(e) {\n",
              "    const delta = Math.sign(e.detail);\n",
              "    if (DIMENSION == 2) {\n",
              "      CAMERA_SIZE[0] = CAMERA_SIZE[0] * (1 + delta * SCALE_SPEED);\n",
              "      CAMERA_SIZE[1] = CAMERA_SIZE[1] * (1 + delta * SCALE_SPEED);\n",
              "    } else if (DIMENSION == 3) {\n",
              "      VIEW_DISTANCE = VIEW_DISTANCE * (1 + delta * SCALE_SPEED);\n",
              "      make_look_at();\n",
              "    }\n",
              "    e.preventDefault();\n",
              "  }, false);\n",
              "\n",
              "\n",
              "  // SERIALIZATION UTILITIES\n",
              "  function decode(sBase64, nBlocksSize) {\n",
              "    var chrs = atob(sBase64);\n",
              "    var array = new Uint8Array(new ArrayBuffer(chrs.length));\n",
              "\n",
              "    for(var i = 0 ; i < chrs.length ; i++) {\n",
              "      array[i] = chrs.charCodeAt(i);\n",
              "    }\n",
              "\n",
              "    return new Float32Array(array.buffer);\n",
              "  }\n",
              "\n",
              "  function from_json(data) {\n",
              "    data = data.data['application/json'];\n",
              "\n",
              "    if (typeof data == 'string') {\n",
              "      return JSON.parse(data);\n",
              "    }\n",
              "\n",
              "    return data;\n",
              "  }\n",
              "\n",
              "  // RUN CELL\n",
              "\n",
              "  load_simulation();\n",
              "  update_frame();\n",
              "</script>\n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8E59mHRb4-3R"
      },
      "source": [
        "Finally, let's plot the velocity distribution compared with its theoretical prediction."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SCKwEVc_5BEk",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "679f0e71-caa8-40a3-8c9b-63db0ea7d782"
      },
      "source": [
        "V_flat = onp.reshape(onp.array(state.velocity), (-1,))\n",
        "occ, bins = onp.histogram(V_flat, bins=100, normed=True)"
      ],
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: VisibleDeprecationWarning: Passing `normed=True` on non-uniform bins has always been broken, and computes neither the probability density function nor the probability mass function. The result is only correct if the bins are uniform, when density=True will produce the same result anyway. The argument will be removed in a future version of numpy.\n",
            "  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "q9JJPIIq5DmG",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 441
        },
        "outputId": "2e2dfb9e-a50d-47c9-d488-b01e8fb47027"
      },
      "source": [
        "T_cur = kT(steps * dt)\n",
        "plt.semilogy(bins[:-1], occ, 'o')\n",
        "plt.semilogy(\n",
        "    bins[:-1], \n",
        "    1.0 / np.sqrt(2 * np.pi * T_cur) * onp.exp(-1/(2 * T_cur) * bins[:-1] ** 2), \n",
        "    linewidth=3)\n",
        "format_plot('t', 'T')\n",
        "finalize_plot()"
      ],
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}